{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EditCampComponent = class EditCampComponent {\n  constructor(toast, router, route, bloodBankService) {\n    this.toast = toast;\n    this.router = router;\n    this.route = route;\n    this.bloodBankService = bloodBankService;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    const campId = this.route.snapshot.paramMap.get('id');\n    if (campId) {\n      this.getSingleCamp(campId);\n    }\n  }\n  onSubmit(form) {\n    this.submitted = true;\n    if (form.invalid) {\n      this.toast.error('Cannot create camp with empty fields');\n      return;\n    }\n    console.log(form.value);\n    this.bloodBankService.updateCamp(form.value).subscribe(data => {\n      this.toast.success('Camp updated successfully');\n      this.router.navigate(['/admin-home']);\n    }, error => {\n      this.toast.error('Error updating camp');\n    });\n  }\n  getSingleCamp(campId) {\n    this.bloodBankService.getSingleCamp(campId).subscribe(data => {\n      this.camp = data;\n      this.patchFormValues();\n    }, error => {\n      this.toast.error('Error retrieving camp details');\n    });\n  }\n  patchFormValues() {\n    if (this.camp) {\n      this.editForm.controls['name'].setValue(this.camp.name);\n      this.editForm.controls['createdBy'].setValue(this.camp.createdBy);\n      this.editForm.controls['location'].setValue(this.camp.location);\n      this.editForm.controls['date'].setValue(this.camp.date);\n      this.editForm.controls['startTime'].setValue(this.camp.startTime);\n      this.editForm.controls['endTime'].setValue(this.camp.endTime);\n    }\n  }\n};\nEditCampComponent = __decorate([Component({\n  selector: 'app-edit-camp',\n  templateUrl: './edit-camp.component.html',\n  styleUrls: ['./edit-camp.component.css']\n})], EditCampComponent);\nexport { EditCampComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YACUC,KAAsB,EACtBC,MAAc,EACdC,KAAqB,EACrBC,gBAAkC;IAHlC,UAAK,GAALH,KAAK;IACL,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IACL,qBAAgB,GAAhBC,gBAAgB;IAP1B,cAAS,GAAY,KAAK;EAQvB;EAEHC,QAAQ;IACN,MAAMC,MAAM,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACrD,IAAIH,MAAM,EAAE;MACV,IAAI,CAACI,aAAa,CAACJ,MAAM,CAAC;;EAE9B;EAEAK,QAAQ,CAACC,IAAY;IACnB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAID,IAAI,CAACE,OAAO,EAAE;MAChB,IAAI,CAACb,KAAK,CAACc,KAAK,CAAC,sCAAsC,CAAC;MACxD;;IAGFC,OAAO,CAACC,GAAG,CAACL,IAAI,CAACM,KAAK,CAAC;IAEvB,IAAI,CAACd,gBAAgB,CAACe,UAAU,CAACP,IAAI,CAACM,KAAK,CAAC,CAACE,SAAS,CACnDC,IAAS,IAAI;MACZ,IAAI,CAACpB,KAAK,CAACqB,OAAO,CAAC,2BAA2B,CAAC;MAC/C,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;IACvC,CAAC,EACAR,KAAU,IAAI;MACb,IAAI,CAACd,KAAK,CAACc,KAAK,CAAC,qBAAqB,CAAC;IACzC,CAAC,CACF;EACH;EAEAL,aAAa,CAACJ,MAAc;IAC1B,IAAI,CAACF,gBAAgB,CAACM,aAAa,CAACJ,MAAM,CAAC,CAACc,SAAS,CAClDC,IAAS,IAAI;MACZ,IAAI,CAACG,IAAI,GAAGH,IAAI;MAChB,IAAI,CAACI,eAAe,EAAE;IACxB,CAAC,EACAV,KAAU,IAAI;MACb,IAAI,CAACd,KAAK,CAACc,KAAK,CAAC,+BAA+B,CAAC;IACnD,CAAC,CACF;EACH;EAEAU,eAAe;IACb,IAAI,IAAI,CAACD,IAAI,EAAE;MACb,IAAI,CAACE,QAAQ,CAACC,QAAQ,CAAC,MAAM,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC;MACvD,IAAI,CAACH,QAAQ,CAACC,QAAQ,CAAC,WAAW,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACJ,IAAI,CAACM,SAAS,CAAC;MACjE,IAAI,CAACJ,QAAQ,CAACC,QAAQ,CAAC,UAAU,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACJ,IAAI,CAACO,QAAQ,CAAC;MAC/D,IAAI,CAACL,QAAQ,CAACC,QAAQ,CAAC,MAAM,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACJ,IAAI,CAACQ,IAAI,CAAC;MACvD,IAAI,CAACN,QAAQ,CAACC,QAAQ,CAAC,WAAW,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACJ,IAAI,CAACS,SAAS,CAAC;MACjE,IAAI,CAACP,QAAQ,CAACC,QAAQ,CAAC,SAAS,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACJ,IAAI,CAACU,OAAO,CAAC;;EAEjE;CACD;AA7DYnC,iBAAiB,eAL7BD,SAAS,CAAC;EACTqC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWtC,iBAAiB,CA6D7B;SA7DYA,iBAAiB","names":["Component","EditCampComponent","constructor","toast","router","route","bloodBankService","ngOnInit","campId","snapshot","paramMap","get","getSingleCamp","onSubmit","form","submitted","invalid","error","console","log","value","updateCamp","subscribe","data","success","navigate","camp","patchFormValues","editForm","controls","setValue","name","createdBy","location","date","startTime","endTime","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\Arcs Infotech\\blood-bank-system\\src\\app\\edit-camp\\edit-camp.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HotToastService } from '@ngneat/hot-toast';\nimport { BloodBankService } from '../blood-bank.service';\n\n@Component({\n  selector: 'app-edit-camp',\n  templateUrl: './edit-camp.component.html',\n  styleUrls: ['./edit-camp.component.css']\n})\nexport class EditCampComponent implements OnInit {\n  editForm!: NgForm;\n  submitted: boolean = false;\n  camp: any;\n\n  constructor(\n    private toast: HotToastService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private bloodBankService: BloodBankService\n  ) {}\n\n  ngOnInit(): void {\n    const campId = this.route.snapshot.paramMap.get('id');\n    if (campId) {\n      this.getSingleCamp(campId);\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    this.submitted = true;\n    if (form.invalid) {\n      this.toast.error('Cannot create camp with empty fields');\n      return;\n    }\n\n    console.log(form.value);\n\n    this.bloodBankService.updateCamp(form.value).subscribe(\n      (data: any) => {\n        this.toast.success('Camp updated successfully');\n        this.router.navigate(['/admin-home']);\n      },\n      (error: any) => {\n        this.toast.error('Error updating camp');\n      }\n    );\n  }\n\n  getSingleCamp(campId: string) {\n    this.bloodBankService.getSingleCamp(campId).subscribe(\n      (data: any) => {\n        this.camp = data;\n        this.patchFormValues();\n      },\n      (error: any) => {\n        this.toast.error('Error retrieving camp details');\n      }\n    );\n  }\n\n  patchFormValues() {\n    if (this.camp) {\n      this.editForm.controls['name'].setValue(this.camp.name);\n      this.editForm.controls['createdBy'].setValue(this.camp.createdBy);\n      this.editForm.controls['location'].setValue(this.camp.location);\n      this.editForm.controls['date'].setValue(this.camp.date);\n      this.editForm.controls['startTime'].setValue(this.camp.startTime);\n      this.editForm.controls['endTime'].setValue(this.camp.endTime);\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}