{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Input, EventEmitter, Injector, Output, ViewChild, ViewChildren, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1$1 from '@ngneat/overview';\nimport { isTemplateRef, isComponent, DynamicViewModule } from '@ngneat/overview';\nimport { Subject, race, defer } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\nconst _c0 = [\"*\"];\nconst _c1 = function (a0, a1) {\n  return {\n    \"border-color\": a0,\n    \"border-right-color\": a1\n  };\n};\nfunction IndicatorComponent_div_0_div_4_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelement(2, \"hot-toast-error\", 2);\n    i0.ɵɵtext(3, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"theme\", ctx_r2.theme);\n  }\n}\nfunction IndicatorComponent_div_0_div_4_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelement(2, \"hot-toast-checkmark\", 2);\n    i0.ɵɵtext(3, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"theme\", ctx_r3.theme);\n  }\n}\nfunction IndicatorComponent_div_0_div_4_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelement(2, \"hot-toast-warning\", 2);\n    i0.ɵɵtext(3, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"theme\", ctx_r4.theme);\n  }\n}\nfunction IndicatorComponent_div_0_div_4_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵelement(2, \"hot-toast-info\", 2);\n    i0.ɵɵtext(3, \"\\n      \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"theme\", ctx_r5.theme);\n  }\n}\nfunction IndicatorComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1, \"\\n    \");\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵtext(3, \"\\n      \");\n    i0.ɵɵtemplate(4, IndicatorComponent_div_0_div_4_div_4_Template, 4, 1, \"div\", 6);\n    i0.ɵɵtext(5, \"\\n      \");\n    i0.ɵɵtemplate(6, IndicatorComponent_div_0_div_4_div_6_Template, 4, 1, \"div\", 6);\n    i0.ɵɵtext(7, \"\\n      \");\n    i0.ɵɵtemplate(8, IndicatorComponent_div_0_div_4_div_8_Template, 4, 1, \"div\", 6);\n    i0.ɵɵtext(9, \"\\n      \");\n    i0.ɵɵtemplate(10, IndicatorComponent_div_0_div_4_div_10_Template, 4, 1, \"div\", 6);\n    i0.ɵɵtext(11, \"\\n    \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \"\\n  \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r1.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"success\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"warning\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"info\");\n  }\n}\nfunction IndicatorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtext(1, \"\\n  \");\n    i0.ɵɵelement(2, \"hot-toast-loader\", 2);\n    i0.ɵɵtext(3, \"\\n  \");\n    i0.ɵɵtemplate(4, IndicatorComponent_div_0_div_4_Template, 13, 5, \"div\", 3);\n    i0.ɵɵtext(5, \"\\n\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"theme\", ctx_r0.theme);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.type !== \"loading\");\n  }\n}\nconst _c2 = [\"hotToastBarBase\"];\nfunction HotToastComponent_ng_container_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n          \");\n    i0.ɵɵelementStart(2, \"hot-toast-animated-icon\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \"\\n        \");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"iconTheme\", ctx_r6.toast.iconTheme);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.toast.icon);\n  }\n}\nfunction HotToastComponent_ng_container_7_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n          \");\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2, \"\\n            \");\n    i0.ɵɵelementContainer(3, 11);\n    i0.ɵɵtext(4, \"\\n          \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \"\\n        \");\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"dynamicView\", ctx_r8.toast.icon);\n  }\n}\nfunction HotToastComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"\\n        \");\n    i0.ɵɵtemplate(2, HotToastComponent_ng_container_7_ng_container_2_Template, 5, 2, \"ng-container\", 4);\n    i0.ɵɵtext(3, \"\\n        \");\n    i0.ɵɵtemplate(4, HotToastComponent_ng_container_7_ng_template_4_Template, 6, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtext(6, \"\\n      \");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r7 = i0.ɵɵreference(5);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isIconString)(\"ngIfElse\", _r7);\n  }\n}\nfunction HotToastComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"\\n        \");\n    i0.ɵɵelement(1, \"hot-toast-indicator\", 12);\n    i0.ɵɵtext(2, \"\\n      \");\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"theme\", ctx_r3.toast.iconTheme)(\"type\", ctx_r3.toast.type);\n  }\n}\nfunction HotToastComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction HotToastComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function HotToastComponent_button_21_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.close());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r5.toast.closeStyle);\n  }\n}\nfunction HotToastContainerComponent_hot_toast_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"hot-toast\", 3);\n    i0.ɵɵlistener(\"height\", function HotToastContainerComponent_hot_toast_4_Template_hot_toast_height_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const toast_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.updateHeight($event, toast_r1));\n    })(\"beforeClosed\", function HotToastContainerComponent_hot_toast_4_Template_hot_toast_beforeClosed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const toast_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.beforeClosed(toast_r1));\n    })(\"afterClosed\", function HotToastContainerComponent_hot_toast_4_Template_hot_toast_afterClosed_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.afterClosed($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const toast_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"toast\", toast_r1)(\"offset\", ctx_r0.calculateOffset(toast_r1.id, toast_r1.position))(\"toastRef\", ctx_r0.toastRefs[i_r2]);\n  }\n}\nconst HOT_TOAST_DEFAULT_TIMEOUTS = {\n  blank: 4000,\n  error: 4000,\n  success: 4000,\n  loading: 30000,\n  warning: 4000,\n  info: 4000\n};\nconst EXIT_ANIMATION_DURATION = 800;\nconst ENTER_ANIMATION_DURATION = 350;\nconst HOT_TOAST_MARGIN = 8;\nclass HotToastRef {\n  constructor(toast) {\n    this.toast = toast;\n    /** Subject for notifying the user that the toast has been closed. */\n    this._onClosed = new Subject();\n  }\n  get data() {\n    return this.toast.data;\n  }\n  set dispose(value) {\n    this._dispose = value;\n  }\n  getToast() {\n    return this.toast;\n  }\n  /**Used for internal purpose\n   * Attach ToastRef to container\n   */\n  appendTo(container) {\n    const {\n      dispose,\n      updateMessage,\n      updateToast,\n      afterClosed\n    } = container.addToast(this);\n    this.dispose = dispose;\n    this.updateMessage = updateMessage;\n    this.updateToast = updateToast;\n    this.afterClosed = race(this._onClosed.asObservable(), afterClosed);\n    return this;\n  }\n  /**\n   * Closes the toast\n   *\n   * @param [closeData={ dismissedByAction: false }] -\n   * Make sure to pass { dismissedByAction: true } when closing from template\n   * @memberof HotToastRef\n   */\n  close(closeData = {\n    dismissedByAction: false\n  }) {\n    this._dispose();\n    this._onClosed.next({\n      dismissedByAction: closeData.dismissedByAction,\n      id: this.toast.id\n    });\n    this._onClosed.complete();\n  }\n}\nconst animate = (element, value) => {\n  element.style.animation = value;\n};\nclass AnimatedIconComponent {}\nAnimatedIconComponent.ɵfac = function AnimatedIconComponent_Factory(t) {\n  return new (t || AnimatedIconComponent)();\n};\nAnimatedIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AnimatedIconComponent,\n  selectors: [[\"hot-toast-animated-icon\"]],\n  inputs: {\n    iconTheme: \"iconTheme\"\n  },\n  ngContentSelectors: _c0,\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"hot-toast-animated-icon\"]],\n  template: function AnimatedIconComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵprojection(2);\n      i0.ɵɵtext(3, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(4, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"color\", ctx.iconTheme == null ? null : ctx.iconTheme.primary);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AnimatedIconComponent, [{\n    type: Component,\n    args: [{\n      selector: 'hot-toast-animated-icon',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div class=\\\"hot-toast-animated-icon\\\" [style.color]=\\\"iconTheme?.primary\\\">\\n  <ng-content></ng-content>\\n</div>\\n\"\n    }]\n  }], null, {\n    iconTheme: [{\n      type: Input\n    }]\n  });\n})();\nclass CheckMarkComponent {}\nCheckMarkComponent.ɵfac = function CheckMarkComponent_Factory(t) {\n  return new (t || CheckMarkComponent)();\n};\nCheckMarkComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CheckMarkComponent,\n  selectors: [[\"hot-toast-checkmark\"]],\n  inputs: {\n    theme: \"theme\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[1, \"hot-toast-checkmark-icon\"]],\n  template: function CheckMarkComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"--check-primary\", ctx.theme == null ? null : ctx.theme.primary)(\"--check-secondary\", ctx.theme == null ? null : ctx.theme.secondary);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CheckMarkComponent, [{\n    type: Component,\n    args: [{\n      selector: 'hot-toast-checkmark',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div\\n  class=\\\"hot-toast-checkmark-icon\\\"\\n  [style.--check-primary]=\\\"theme?.primary\\\"\\n  [style.--check-secondary]=\\\"theme?.secondary\\\"\\n></div>\\n\"\n    }]\n  }], null, {\n    theme: [{\n      type: Input\n    }]\n  });\n})();\nclass ErrorComponent {}\nErrorComponent.ɵfac = function ErrorComponent_Factory(t) {\n  return new (t || ErrorComponent)();\n};\nErrorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ErrorComponent,\n  selectors: [[\"hot-toast-error\"]],\n  inputs: {\n    theme: \"theme\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[1, \"hot-toast-error-icon\"]],\n  template: function ErrorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"--error-primary\", ctx.theme == null ? null : ctx.theme.primary)(\"--error-secondary\", ctx.theme == null ? null : ctx.theme.secondary);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ErrorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'hot-toast-error',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div\\n  class=\\\"hot-toast-error-icon\\\"\\n  [style.--error-primary]=\\\"theme?.primary\\\"\\n  [style.--error-secondary]=\\\"theme?.secondary\\\"\\n></div>\\n\"\n    }]\n  }], null, {\n    theme: [{\n      type: Input\n    }]\n  });\n})();\nclass LoaderComponent {}\nLoaderComponent.ɵfac = function LoaderComponent_Factory(t) {\n  return new (t || LoaderComponent)();\n};\nLoaderComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LoaderComponent,\n  selectors: [[\"hot-toast-loader\"]],\n  inputs: {\n    theme: \"theme\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[1, \"hot-toast-loader-icon\", 3, \"ngStyle\"]],\n  template: function LoaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(1, _c1, ctx.theme == null ? null : ctx.theme.primary, ctx.theme == null ? null : ctx.theme.secondary));\n    }\n  },\n  dependencies: [i1.NgStyle],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'hot-toast-loader',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div\\n  class=\\\"hot-toast-loader-icon\\\"\\n  [ngStyle]=\\\"{ 'border-color': theme?.primary, 'border-right-color': theme?.secondary }\\\"\\n></div>\\n\"\n    }]\n  }], null, {\n    theme: [{\n      type: Input\n    }]\n  });\n})();\nclass WarningComponent {}\nWarningComponent.ɵfac = function WarningComponent_Factory(t) {\n  return new (t || WarningComponent)();\n};\nWarningComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: WarningComponent,\n  selectors: [[\"hot-toast-warning\"]],\n  inputs: {\n    theme: \"theme\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[1, \"hot-toast-warning-icon\"]],\n  template: function WarningComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"--warn-primary\", ctx.theme == null ? null : ctx.theme.primary)(\"--warn-secondary\", ctx.theme == null ? null : ctx.theme.secondary);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WarningComponent, [{\n    type: Component,\n    args: [{\n      selector: 'hot-toast-warning',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div\\n  class=\\\"hot-toast-warning-icon\\\"\\n  [style.--warn-primary]=\\\"theme?.primary\\\"\\n  [style.--warn-secondary]=\\\"theme?.secondary\\\"\\n></div>\\n\"\n    }]\n  }], null, {\n    theme: [{\n      type: Input\n    }]\n  });\n})();\nclass InfoComponent {}\nInfoComponent.ɵfac = function InfoComponent_Factory(t) {\n  return new (t || InfoComponent)();\n};\nInfoComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InfoComponent,\n  selectors: [[\"hot-toast-info\"]],\n  inputs: {\n    theme: \"theme\"\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[1, \"hot-toast-info-icon\"]],\n  template: function InfoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"--warn-primary\", ctx.theme == null ? null : ctx.theme.primary)(\"--warn-secondary\", ctx.theme == null ? null : ctx.theme.secondary);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InfoComponent, [{\n    type: Component,\n    args: [{\n      selector: 'hot-toast-info',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div\\n  class=\\\"hot-toast-info-icon\\\"\\n  [style.--warn-primary]=\\\"theme?.primary\\\"\\n  [style.--warn-secondary]=\\\"theme?.secondary\\\"\\n></div>\\n\"\n    }]\n  }], null, {\n    theme: [{\n      type: Input\n    }]\n  });\n})();\nclass IndicatorComponent {}\nIndicatorComponent.ɵfac = function IndicatorComponent_Factory(t) {\n  return new (t || IndicatorComponent)();\n};\nIndicatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: IndicatorComponent,\n  selectors: [[\"hot-toast-indicator\"]],\n  inputs: {\n    theme: \"theme\",\n    type: \"type\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[\"class\", \"hot-toast-indicator-wrapper\", 4, \"ngIf\"], [1, \"hot-toast-indicator-wrapper\"], [3, \"theme\"], [\"class\", \"hot-toast-status-wrapper\", 4, \"ngIf\"], [1, \"hot-toast-status-wrapper\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"]],\n  template: function IndicatorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, IndicatorComponent_div_0_Template, 6, 2, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.type !== \"blank\");\n    }\n  },\n  dependencies: [i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, CheckMarkComponent, ErrorComponent, LoaderComponent, WarningComponent, InfoComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(IndicatorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'hot-toast-indicator',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div *ngIf=\\\"type !== 'blank'\\\" class=\\\"hot-toast-indicator-wrapper\\\">\\n  <hot-toast-loader [theme]=\\\"theme\\\"></hot-toast-loader>\\n  <div *ngIf=\\\"type !== 'loading'\\\" class=\\\"hot-toast-status-wrapper\\\">\\n    <div [ngSwitch]=\\\"type\\\">\\n      <div *ngSwitchCase=\\\"'error'\\\">\\n        <hot-toast-error [theme]=\\\"theme\\\"></hot-toast-error>\\n      </div>\\n      <div *ngSwitchCase=\\\"'success'\\\">\\n        <hot-toast-checkmark [theme]=\\\"theme\\\"></hot-toast-checkmark>\\n      </div>\\n      <div *ngSwitchCase=\\\"'warning'\\\">\\n        <hot-toast-warning [theme]=\\\"theme\\\"></hot-toast-warning>\\n      </div>\\n      <div *ngSwitchCase=\\\"'info'\\\">\\n        <hot-toast-info [theme]=\\\"theme\\\"></hot-toast-info>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n    }]\n  }], null, {\n    theme: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }]\n  });\n})();\nclass HotToastComponent {\n  constructor(injector, renderer, ngZone) {\n    this.injector = injector;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.offset = 0;\n    this.height = new EventEmitter();\n    this.beforeClosed = new EventEmitter();\n    this.afterClosed = new EventEmitter();\n    this.isManualClose = false;\n    this.unlisteners = [];\n  }\n  get containerPositionStyle() {\n    const top = this.toast.position.includes('top');\n    const verticalStyle = top ? {\n      top: 0\n    } : {\n      bottom: 0\n    };\n    const horizontalStyle = this.toast.position.includes('left') ? {\n      left: 0\n    } : this.toast.position.includes('right') ? {\n      right: 0\n    } : {\n      left: 0,\n      right: 0,\n      justifyContent: 'center'\n    };\n    return {\n      transform: `translateY(${this.offset * (top ? 1 : -1)}px)`,\n      ...verticalStyle,\n      ...horizontalStyle\n    };\n  }\n  get toastBarBaseStyles() {\n    const top = this.toast.position.includes('top');\n    const enterAnimation = `hotToastEnterAnimation${top ? 'Negative' : 'Positive'} ${ENTER_ANIMATION_DURATION}ms cubic-bezier(0.21, 1.02, 0.73, 1) forwards`;\n    const exitAnimation = `hotToastExitAnimation${top ? 'Negative' : 'Positive'} ${EXIT_ANIMATION_DURATION}ms forwards cubic-bezier(0.06, 0.71, 0.55, 1) ${this.toast.duration}ms`;\n    const animation = this.toast.autoClose ? `${enterAnimation}, ${exitAnimation}` : enterAnimation;\n    return {\n      ...this.toast.style,\n      animation\n    };\n  }\n  get isIconString() {\n    return typeof this.toast.icon === 'string';\n  }\n  ngOnInit() {\n    if (isTemplateRef(this.toast.message)) {\n      this.context = {\n        $implicit: this.toastRef\n      };\n    }\n    if (isComponent(this.toast.message)) {\n      this.toastComponentInjector = Injector.create({\n        providers: [{\n          provide: HotToastRef,\n          useValue: this.toastRef\n        }],\n        parent: this.toast.injector || this.injector\n      });\n    }\n  }\n  ngAfterViewInit() {\n    const nativeElement = this.toastBarBase.nativeElement;\n    // Caretaker note: accessing `offsetHeight` triggers the whole layout update.\n    // Macro tasks (like `setTimeout`) might be executed within the current rendering frame and cause a frame drop.\n    requestAnimationFrame(() => {\n      this.height.emit(nativeElement.offsetHeight);\n    });\n    // Caretaker note: `animationstart` and `animationend` events are event tasks that trigger change detection.\n    // We'd want to trigger the change detection only if it's an exit animation.\n    this.ngZone.runOutsideAngular(() => {\n      this.unlisteners.push(\n      // Caretaker note: we have to remove these event listeners at the end (even if the element is removed from DOM).\n      // zone.js stores its `ZoneTask`s within the `nativeElement[Zone.__symbol__('animationstart') + 'false']` property\n      // with callback that capture `this`.\n      this.renderer.listen(nativeElement, 'animationstart', event => {\n        if (this.isExitAnimation(event)) {\n          this.ngZone.run(() => this.beforeClosed.emit());\n        }\n      }), this.renderer.listen(nativeElement, 'animationend', event => {\n        if (this.isExitAnimation(event)) {\n          this.ngZone.run(() => this.afterClosed.emit({\n            dismissedByAction: this.isManualClose,\n            id: this.toast.id\n          }));\n        }\n      }));\n    });\n    this.setToastAttributes();\n  }\n  close() {\n    this.isManualClose = true;\n    const top = this.toast.position.includes('top');\n    const exitAnimation = `hotToastExitAnimation${top ? 'Negative' : 'Positive'} ${EXIT_ANIMATION_DURATION}ms forwards cubic-bezier(0.06, 0.71, 0.55, 1)`;\n    const nativeElement = this.toastBarBase.nativeElement;\n    animate(nativeElement, exitAnimation);\n  }\n  ngOnDestroy() {\n    this.close();\n    while (this.unlisteners.length) {\n      this.unlisteners.pop()();\n    }\n  }\n  isExitAnimation(ev) {\n    return ev.animationName.includes('hotToastExitAnimation');\n  }\n  setToastAttributes() {\n    const toastAttributes = this.toast.attributes;\n    for (const [key, value] of Object.entries(toastAttributes)) {\n      this.renderer.setAttribute(this.toastBarBase.nativeElement, key, value);\n    }\n  }\n}\nHotToastComponent.ɵfac = function HotToastComponent_Factory(t) {\n  return new (t || HotToastComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nHotToastComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HotToastComponent,\n  selectors: [[\"hot-toast\"]],\n  viewQuery: function HotToastComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.toastBarBase = _t.first);\n    }\n  },\n  inputs: {\n    toast: \"toast\",\n    offset: \"offset\",\n    defaultConfig: \"defaultConfig\",\n    toastRef: \"toastRef\"\n  },\n  outputs: {\n    height: \"height\",\n    beforeClosed: \"beforeClosed\",\n    afterClosed: \"afterClosed\"\n  },\n  decls: 25,\n  vars: 14,\n  consts: [[1, \"hot-toast-bar-base-container\", 3, \"ngStyle\", \"ngClass\"], [1, \"hot-toast-bar-base\", 3, \"ngStyle\", \"ngClass\"], [\"hotToastBarBase\", \"\"], [\"aria-hidden\", \"true\", 1, \"hot-toast-icon\"], [4, \"ngIf\", \"ngIfElse\"], [\"indicator\", \"\"], [1, \"hot-toast-message\"], [4, \"dynamicView\", \"dynamicViewContext\", \"dynamicViewInjector\"], [\"type\", \"button\", \"class\", \"hot-toast-close-btn\", \"aria-label\", \"Close\", 3, \"ngStyle\", \"click\", 4, \"ngIf\"], [\"iconTemplateOrComponent\", \"\"], [3, \"iconTheme\"], [3, \"dynamicView\"], [3, \"theme\", \"type\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"hot-toast-close-btn\", 3, \"ngStyle\", \"click\"]],\n  template: function HotToastComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"div\", 1, 2);\n      i0.ɵɵtext(4, \"\\n    \");\n      i0.ɵɵelementStart(5, \"div\", 3);\n      i0.ɵɵtext(6, \"\\n      \");\n      i0.ɵɵtemplate(7, HotToastComponent_ng_container_7_Template, 7, 2, \"ng-container\", 4);\n      i0.ɵɵtext(8, \"\\n\\n      \");\n      i0.ɵɵtemplate(9, HotToastComponent_ng_template_9_Template, 3, 2, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtext(11, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"\\n\\n    \");\n      i0.ɵɵelementStart(13, \"div\", 6);\n      i0.ɵɵtext(14, \"\\n      \");\n      i0.ɵɵelementStart(15, \"div\");\n      i0.ɵɵtext(16, \"\\n        \");\n      i0.ɵɵtemplate(17, HotToastComponent_ng_container_17_Template, 1, 0, \"ng-container\", 7);\n      i0.ɵɵtext(18, \"\\n      \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(19, \"\\n    \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \"\\n\\n    \");\n      i0.ɵɵtemplate(21, HotToastComponent_button_21_Template, 1, 1, \"button\", 8);\n      i0.ɵɵtext(22, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(24, \"\\n\");\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(10);\n      i0.ɵɵproperty(\"ngStyle\", ctx.containerPositionStyle)(\"ngClass\", \"hot-toast-theme-\" + ctx.toast.theme);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"--hot-toast-animation-state\", ctx.isManualClose ? \"running\" : \"paused\");\n      i0.ɵɵproperty(\"ngStyle\", ctx.toastBarBaseStyles)(\"ngClass\", ctx.toast.className);\n      i0.ɵɵattribute(\"aria-live\", ctx.toast.ariaLive)(\"role\", ctx.toast.role);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.toast.icon !== undefined)(\"ngIfElse\", _r2);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"dynamicView\", ctx.toast.message)(\"dynamicViewContext\", ctx.context)(\"dynamicViewInjector\", ctx.toastComponentInjector);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.toast.dismissible);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgIf, i1.NgStyle, i1$1.DynamicViewDirective, AnimatedIconComponent, IndicatorComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HotToastComponent, [{\n    type: Component,\n    args: [{\n      selector: 'hot-toast',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div\\n  class=\\\"hot-toast-bar-base-container\\\"\\n  [ngStyle]=\\\"containerPositionStyle\\\"\\n  [ngClass]=\\\"'hot-toast-theme-' + toast.theme\\\"\\n>\\n  <div\\n    class=\\\"hot-toast-bar-base\\\"\\n    #hotToastBarBase\\n    [ngStyle]=\\\"toastBarBaseStyles\\\"\\n    [ngClass]=\\\"toast.className\\\"\\n    [style.--hot-toast-animation-state]=\\\"isManualClose ? 'running' : 'paused'\\\"\\n    [attr.aria-live]=\\\"toast.ariaLive\\\"\\n    [attr.role]=\\\"toast.role\\\"\\n  >\\n    <div class=\\\"hot-toast-icon\\\" aria-hidden=\\\"true\\\">\\n      <ng-container *ngIf=\\\"toast.icon !== undefined; else indicator\\\">\\n        <ng-container *ngIf=\\\"isIconString; else iconTemplateOrComponent\\\">\\n          <hot-toast-animated-icon [iconTheme]=\\\"toast.iconTheme\\\">{{ toast.icon }}</hot-toast-animated-icon>\\n        </ng-container>\\n        <ng-template #iconTemplateOrComponent>\\n          <div>\\n            <ng-container [dynamicView]=\\\"toast.icon\\\"></ng-container>\\n          </div>\\n        </ng-template>\\n      </ng-container>\\n\\n      <ng-template #indicator>\\n        <hot-toast-indicator [theme]=\\\"toast.iconTheme\\\" [type]=\\\"toast.type\\\"></hot-toast-indicator>\\n      </ng-template>\\n    </div>\\n\\n    <div class=\\\"hot-toast-message\\\">\\n      <div>\\n        <ng-container *dynamicView=\\\"toast.message; context: context; injector: toastComponentInjector\\\"></ng-container>\\n      </div>\\n    </div>\\n\\n    <button\\n      *ngIf=\\\"toast.dismissible\\\"\\n      (click)=\\\"close()\\\"\\n      type=\\\"button\\\"\\n      class=\\\"hot-toast-close-btn\\\"\\n      aria-label=\\\"Close\\\"\\n      [ngStyle]=\\\"toast.closeStyle\\\"\\n    ></button>\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    toast: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    defaultConfig: [{\n      type: Input\n    }],\n    toastRef: [{\n      type: Input\n    }],\n    height: [{\n      type: Output\n    }],\n    beforeClosed: [{\n      type: Output\n    }],\n    afterClosed: [{\n      type: Output\n    }],\n    toastBarBase: [{\n      type: ViewChild,\n      args: ['hotToastBarBase']\n    }]\n  });\n})();\nclass HotToastContainerComponent {\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.toasts = [];\n    this.toastRefs = [];\n    /** Subject for notifying the user that the toast has been closed. */\n    this._onClosed = new Subject();\n    this.onClosed$ = this._onClosed.asObservable();\n  }\n  trackById(index, toast) {\n    return toast.id;\n  }\n  calculateOffset(toastId, position) {\n    const visibleToasts = this.toasts.filter(t => t.visible && t.position === position);\n    const index = visibleToasts.findIndex(toast => toast.id === toastId);\n    const offset = index !== -1 ? visibleToasts.slice(...(this.defaultConfig.reverseOrder ? [index + 1] : [0, index])).reduce((acc, t) => acc + (t.height || 0) + HOT_TOAST_MARGIN, 0) : 0;\n    return offset;\n  }\n  updateHeight(height, toast) {\n    toast.height = height;\n    this.cdr.detectChanges();\n  }\n  addToast(ref) {\n    this.toastRefs.push(ref);\n    const toast = ref.getToast();\n    this.toasts.push(ref.getToast());\n    this.cdr.detectChanges();\n    return {\n      dispose: () => {\n        this.closeToast(toast.id);\n      },\n      updateMessage: message => {\n        toast.message = message;\n        this.cdr.detectChanges();\n      },\n      updateToast: options => {\n        this.updateToasts(toast, options);\n        this.cdr.detectChanges();\n      },\n      afterClosed: this.getAfterClosed(toast)\n    };\n  }\n  closeToast(id) {\n    if (id) {\n      const comp = this.hotToastComponentList.find(item => item.toast.id === id);\n      if (comp) {\n        comp.close();\n      }\n    } else {\n      this.hotToastComponentList.forEach(comp => comp.close());\n    }\n  }\n  beforeClosed(toast) {\n    toast.visible = false;\n  }\n  afterClosed(closeToast) {\n    const toastIndex = this.toasts.findIndex(t => t.id === closeToast.id);\n    if (toastIndex > -1) {\n      this._onClosed.next(closeToast);\n      this.toasts = this.toasts.filter(t => t.id !== closeToast.id);\n      this.toastRefs = this.toastRefs.filter(t => t.getToast().id !== closeToast.id);\n      this.cdr.detectChanges();\n    }\n  }\n  hasToast(id) {\n    return this.toasts.findIndex(t => t.id === id) > -1;\n  }\n  getAfterClosed(toast) {\n    return this.onClosed$.pipe(filter(v => v.id === toast.id));\n  }\n  updateToasts(toast, options) {\n    this.toasts = this.toasts.map(t => ({\n      ...t,\n      ...(t.id === toast.id && {\n        ...toast,\n        ...options\n      })\n    }));\n  }\n}\nHotToastContainerComponent.ɵfac = function HotToastContainerComponent_Factory(t) {\n  return new (t || HotToastContainerComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nHotToastContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: HotToastContainerComponent,\n  selectors: [[\"hot-toast-container\"]],\n  viewQuery: function HotToastContainerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(HotToastComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hotToastComponentList = _t);\n    }\n  },\n  inputs: {\n    defaultConfig: \"defaultConfig\"\n  },\n  decls: 8,\n  vars: 2,\n  consts: [[2, \"position\", \"fixed\", \"z-index\", \"9999\", \"top\", \"0\", \"right\", \"0\", \"bottom\", \"0\", \"left\", \"0\", \"pointer-events\", \"none\"], [2, \"position\", \"relative\", \"height\", \"100%\"], [3, \"toast\", \"offset\", \"toastRef\", \"height\", \"beforeClosed\", \"afterClosed\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"toast\", \"offset\", \"toastRef\", \"height\", \"beforeClosed\", \"afterClosed\"]],\n  template: function HotToastContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \"\\n  \");\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵtext(3, \"\\n    \");\n      i0.ɵɵtemplate(4, HotToastContainerComponent_hot_toast_4_Template, 1, 3, \"hot-toast\", 2);\n      i0.ɵɵtext(5, \"\\n  \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(6, \"\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\n\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.toasts)(\"ngForTrackBy\", ctx.trackById);\n    }\n  },\n  dependencies: [i1.NgForOf, HotToastComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HotToastContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'hot-toast-container',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div style=\\\"position: fixed; z-index: 9999; top: 0; right: 0; bottom: 0; left: 0; pointer-events: none\\\">\\n  <div style=\\\"position: relative; height: 100%\\\">\\n    <hot-toast\\n      *ngFor=\\\"let toast of toasts; trackBy: trackById; let i = index\\\"\\n      [toast]=\\\"toast\\\"\\n      [offset]=\\\"calculateOffset(toast.id, toast.position)\\\"\\n      [toastRef]=\\\"toastRefs[i]\\\"\\n      (height)=\\\"updateHeight($event, toast)\\\"\\n      (beforeClosed)=\\\"beforeClosed(toast)\\\"\\n      (afterClosed)=\\\"afterClosed($event)\\\"\\n    ></hot-toast>\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    defaultConfig: [{\n      type: Input\n    }],\n    hotToastComponentList: [{\n      type: ViewChildren,\n      args: [HotToastComponent]\n    }]\n  });\n})();\nclass ToastConfig {\n  constructor() {\n    /**\n     * Sets the reverse order for hot-toast stacking\n     *\n     * @default false\n     */\n    this.reverseOrder = false;\n    this.ariaLive = 'polite';\n    this.role = 'status';\n    this.position = 'top-center';\n    this.autoClose = true;\n    this.theme = 'toast';\n    this.attributes = {};\n    // key in ToastType\n    this.info = {\n      content: ''\n    };\n    this.success = {\n      content: ''\n    };\n    this.error = {\n      content: ''\n    };\n    this.loading = {\n      content: ''\n    };\n    this.blank = {\n      content: ''\n    };\n    this.warning = {\n      content: ''\n    };\n  }\n}\nconst isFunction = valOrFunction => typeof valOrFunction === 'function';\nconst resolveValueOrFunction = (valOrFunction, arg) => isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction;\nclass ToastPersistConfig {\n  constructor() {\n    /**\n     *In which storage id vs. counts should be stored\n     *\n     * @type {('local' | 'session')}\n     * @memberof ToastPersistConfig\n     * @default 'local'\n     */\n    this.storage = 'local';\n    /**\n     *The key pattern to store object in storage. `${id}` in pattern is replaced with actual toast id.\n     *\n     * @type {('local' | 'session')}\n     * @memberof ToastPersistConfig\n     * @default 'ngneat/hottoast-${id}'\n     */\n    this.key = 'ngneat/hototast-${id}';\n    /**\n     *The number of toasts allowed to show.\n     *\n     * @memberof ToastPersistConfig\n     * @default 1\n     */\n    this.count = 1;\n    this.enabled = false;\n  }\n}\nclass HotToastService {\n  constructor(_viewService, platformId, config) {\n    this._viewService = _viewService;\n    this.platformId = platformId;\n    this._isInitialized = false;\n    this._defaultConfig = new ToastConfig();\n    this._defaultPersistConfig = new ToastPersistConfig();\n    if (config) {\n      this._defaultConfig = {\n        ...this._defaultConfig,\n        ...config\n      };\n    }\n  }\n  get defaultConfig() {\n    return this._defaultConfig;\n  }\n  set defaultConfig(config) {\n    this._defaultConfig = {\n      ...this._defaultConfig,\n      ...config\n    };\n    if (this._componentRef) {\n      this._componentRef.setInput('defaultConfig', this._defaultConfig);\n    }\n  }\n  /**\n   * Opens up an hot-toast without any pre-configurations\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  show(message, options) {\n    const toast = this.createToast(message || this._defaultConfig.blank.content, 'blank', {\n      ...this._defaultConfig,\n      ...options\n    });\n    return toast;\n  }\n  /**\n   * Opens up an hot-toast with pre-configurations for error state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  error(message, options) {\n    const toast = this.createToast(message || this._defaultConfig.error.content, 'error', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.error,\n      ...options\n    });\n    return toast;\n  }\n  /**\n   * Opens up an hot-toast with pre-configurations for success state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  success(message, options) {\n    const toast = this.createToast(message || this._defaultConfig.success.content, 'success', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.success,\n      ...options\n    });\n    return toast;\n  }\n  /**\n   * Opens up an hot-toast with pre-configurations for loading state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  loading(message, options) {\n    const toast = this.createToast(message || this._defaultConfig.loading.content, 'loading', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.loading,\n      ...options\n    });\n    return toast;\n  }\n  /**\n   * Opens up an hot-toast with pre-configurations for warning state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  warning(message, options) {\n    const toast = this.createToast(message || this._defaultConfig.warning.content, 'warning', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.warning,\n      ...options\n    });\n    return toast;\n  }\n  /**\n   * Opens up an hot-toast with pre-configurations for info state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   * @since 3.3.0\n   */\n  info(message, options) {\n    const toast = this.createToast(message || this._defaultConfig.info.content, 'info', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.info,\n      ...options\n    });\n    return toast;\n  }\n  /**\n   *\n   *  Opens up an hot-toast with pre-configurations for loading initially and then changes state based on messages\n   *\n   * @template T Type of observable\n   * @param messages Messages for each state i.e. loading, success and error\n   * @returns\n   * @memberof HotToastService\n   */\n  observe(messages) {\n    return source => {\n      let toastRef;\n      let start = 0;\n      const loadingContent = messages.loading ?? this._defaultConfig.loading?.content;\n      const successContent = messages.success ?? this._defaultConfig.success?.content;\n      const errorContent = messages.error ?? this._defaultConfig.error?.content;\n      return defer(() => {\n        if (loadingContent) {\n          toastRef = this.createLoadingToast(loadingContent);\n          start = Date.now();\n        }\n        return source.pipe(tap({\n          ...(successContent && {\n            next: val => {\n              toastRef = this.createOrUpdateToast(messages, val, toastRef, 'success', start === 0 ? start : Date.now() - start);\n            }\n          }),\n          ...(errorContent && {\n            error: e => {\n              toastRef = this.createOrUpdateToast(messages, e, toastRef, 'error', start === 0 ? start : Date.now() - start);\n            }\n          })\n        }));\n      });\n    };\n  }\n  /**\n   * Closes the hot-toast\n   *\n   * @param [id] - ID of the toast\n   * @since 3.0.1 - If ID is not provided, all toasts will be closed\n   */\n  close(id) {\n    if (this._componentRef) {\n      this._componentRef.ref.instance.closeToast(id);\n    }\n  }\n  /**\n   * Used for internal purpose only.\n   * Creates a container component and attaches it to document.body.\n   */\n  init() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    this._componentRef = this._viewService.createComponent(HotToastContainerComponent).setInput('defaultConfig', this._defaultConfig).appendTo(document.body);\n  }\n  createOrUpdateToast(messages, val, toastRef, type, diff) {\n    let content = null;\n    let options = {};\n    ({\n      content,\n      options\n    } = this.getContentAndOptions(type, messages[type] || (this._defaultConfig[type] ? this._defaultConfig[type].content : '')));\n    content = resolveValueOrFunction(content, val);\n    if (toastRef) {\n      toastRef.updateMessage(content);\n      const updatedOptions = {\n        type,\n        duration: diff + HOT_TOAST_DEFAULT_TIMEOUTS[type],\n        ...options,\n        ...(options.duration && {\n          duration: diff + options.duration\n        })\n      };\n      toastRef.updateToast(updatedOptions);\n    } else {\n      this.createToast(content, type, options);\n    }\n    return toastRef;\n  }\n  createToast(message, type, options, observableMessages) {\n    if (!this._isInitialized) {\n      this._isInitialized = true;\n      this.init();\n    }\n    const now = Date.now();\n    const id = options?.id ?? now.toString();\n    if (!this.isDuplicate(id) && (!options.persist?.enabled || options.persist?.enabled && this.handleStorageValue(id, options))) {\n      const toast = {\n        ariaLive: options?.ariaLive ?? 'polite',\n        createdAt: now,\n        duration: options?.duration ?? HOT_TOAST_DEFAULT_TIMEOUTS[type],\n        id,\n        message,\n        role: options?.role ?? 'status',\n        type,\n        visible: true,\n        observableMessages: observableMessages ?? undefined,\n        ...options\n      };\n      return new HotToastRef(toast).appendTo(this._componentRef.ref.instance);\n    }\n  }\n  /**\n   * Checks whether any toast with same id is present.\n   *\n   * @private\n   * @param id - Toast ID\n   */\n  isDuplicate(id) {\n    return this._componentRef.ref.instance.hasToast(id);\n  }\n  /**\n   * Creates an entry in local or session storage with count ${defaultConfig.persist.count}, if not present.\n   * If present in storage, reduces the count\n   * and returns the count.\n   * Count can not be less than 0.\n   */\n  handleStorageValue(id, options) {\n    let count = 1;\n    const persist = {\n      ...this._defaultPersistConfig,\n      ...options.persist\n    };\n    const storage = persist.storage === 'local' ? localStorage : sessionStorage;\n    const key = persist.key.replace(/\\${id}/g, id);\n    let item = storage.getItem(key);\n    if (item) {\n      item = parseInt(item, 10);\n      if (item > 0) {\n        count = item - 1;\n      } else {\n        count = item;\n      }\n    } else {\n      count = persist.count;\n    }\n    storage.setItem(key, count.toString());\n    return count;\n  }\n  getContentAndOptions(toastType, message) {\n    let content;\n    let options = {\n      ...this._defaultConfig,\n      ...this._defaultConfig[toastType]\n    };\n    // typeof message === 'object' won't work, cz TemplateRef's type is object\n    if (typeof message === 'string' || isTemplateRef(message) || isComponent(message)) {\n      content = message;\n    } else {\n      let restOptions;\n      ({\n        content,\n        ...restOptions\n      } = message);\n      options = {\n        ...options,\n        ...restOptions\n      };\n    }\n    return {\n      content,\n      options\n    };\n  }\n  createLoadingToast(messages) {\n    let content = null;\n    let options = {};\n    ({\n      content,\n      options\n    } = this.getContentAndOptions('loading', messages));\n    return this.loading(content, options);\n  }\n}\nHotToastService.ɵfac = function HotToastService_Factory(t) {\n  return new (t || HotToastService)(i0.ɵɵinject(i1$1.ViewService), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(ToastConfig, 8));\n};\nHotToastService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: HotToastService,\n  factory: HotToastService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HotToastService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.ViewService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: ToastConfig,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\nclass HotToastModule {\n  static forRoot(config) {\n    return {\n      ngModule: HotToastModule,\n      providers: [{\n        provide: ToastConfig,\n        useValue: config\n      }]\n    };\n  }\n}\nHotToastModule.ɵfac = function HotToastModule_Factory(t) {\n  return new (t || HotToastModule)();\n};\nHotToastModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: HotToastModule\n});\nHotToastModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, DynamicViewModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HotToastModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [HotToastContainerComponent, HotToastComponent, AnimatedIconComponent, IndicatorComponent, CheckMarkComponent, ErrorComponent, LoaderComponent, WarningComponent, InfoComponent],\n      imports: [CommonModule, DynamicViewModule]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of hot-toast\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HotToastModule, HotToastRef, HotToastService, ToastConfig, ToastPersistConfig, resolveValueOrFunction };","map":{"version":3,"names":["i1","isPlatformServer","CommonModule","i0","Component","ChangeDetectionStrategy","Input","EventEmitter","Injector","Output","ViewChild","ViewChildren","PLATFORM_ID","Injectable","Inject","Optional","NgModule","i1$1","isTemplateRef","isComponent","DynamicViewModule","Subject","race","defer","filter","tap","HOT_TOAST_DEFAULT_TIMEOUTS","blank","error","success","loading","warning","info","EXIT_ANIMATION_DURATION","ENTER_ANIMATION_DURATION","HOT_TOAST_MARGIN","HotToastRef","constructor","toast","_onClosed","data","dispose","value","_dispose","getToast","appendTo","container","updateMessage","updateToast","afterClosed","addToast","asObservable","close","closeData","dismissedByAction","next","id","complete","animate","element","style","animation","AnimatedIconComponent","ɵfac","ɵcmp","type","args","selector","changeDetection","OnPush","template","iconTheme","CheckMarkComponent","theme","ErrorComponent","LoaderComponent","NgStyle","WarningComponent","InfoComponent","IndicatorComponent","NgIf","NgSwitch","NgSwitchCase","HotToastComponent","injector","renderer","ngZone","offset","height","beforeClosed","isManualClose","unlisteners","containerPositionStyle","top","position","includes","verticalStyle","bottom","horizontalStyle","left","right","justifyContent","transform","toastBarBaseStyles","enterAnimation","exitAnimation","duration","autoClose","isIconString","icon","ngOnInit","message","context","$implicit","toastRef","toastComponentInjector","create","providers","provide","useValue","parent","ngAfterViewInit","nativeElement","toastBarBase","requestAnimationFrame","emit","offsetHeight","runOutsideAngular","push","listen","event","isExitAnimation","run","setToastAttributes","ngOnDestroy","length","pop","ev","animationName","toastAttributes","attributes","key","Object","entries","setAttribute","Renderer2","NgZone","NgClass","DynamicViewDirective","defaultConfig","HotToastContainerComponent","cdr","toasts","toastRefs","onClosed$","trackById","index","calculateOffset","toastId","visibleToasts","t","visible","findIndex","slice","reverseOrder","reduce","acc","updateHeight","detectChanges","ref","closeToast","options","updateToasts","getAfterClosed","comp","hotToastComponentList","find","item","forEach","toastIndex","hasToast","pipe","v","map","ChangeDetectorRef","NgForOf","ToastConfig","ariaLive","role","content","isFunction","valOrFunction","resolveValueOrFunction","arg","ToastPersistConfig","storage","count","enabled","HotToastService","_viewService","platformId","config","_isInitialized","_defaultConfig","_defaultPersistConfig","_componentRef","setInput","show","createToast","observe","messages","source","start","loadingContent","successContent","errorContent","createLoadingToast","Date","now","val","createOrUpdateToast","e","instance","init","createComponent","document","body","diff","getContentAndOptions","updatedOptions","observableMessages","toString","isDuplicate","persist","handleStorageValue","createdAt","undefined","localStorage","sessionStorage","replace","getItem","parseInt","setItem","toastType","restOptions","ViewService","ɵprov","providedIn","decorators","HotToastModule","forRoot","ngModule","ɵmod","ɵinj","declarations","imports"],"sources":["C:/Users/hp/Documents/Arcs Infotech/blood-bank-system/node_modules/@ngneat/hot-toast/fesm2020/ngneat-hot-toast.mjs"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Input, EventEmitter, Injector, Output, ViewChild, ViewChildren, PLATFORM_ID, Injectable, Inject, Optional, NgModule } from '@angular/core';\nimport * as i1$1 from '@ngneat/overview';\nimport { isTemplateRef, isComponent, DynamicViewModule } from '@ngneat/overview';\nimport { Subject, race, defer } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\n\nconst HOT_TOAST_DEFAULT_TIMEOUTS = {\n    blank: 4000,\n    error: 4000,\n    success: 4000,\n    loading: 30000,\n    warning: 4000,\n    info: 4000,\n};\nconst EXIT_ANIMATION_DURATION = 800;\nconst ENTER_ANIMATION_DURATION = 350;\nconst HOT_TOAST_MARGIN = 8;\n\nclass HotToastRef {\n    constructor(toast) {\n        this.toast = toast;\n        /** Subject for notifying the user that the toast has been closed. */\n        this._onClosed = new Subject();\n    }\n    get data() {\n        return this.toast.data;\n    }\n    set dispose(value) {\n        this._dispose = value;\n    }\n    getToast() {\n        return this.toast;\n    }\n    /**Used for internal purpose\n     * Attach ToastRef to container\n     */\n    appendTo(container) {\n        const { dispose, updateMessage, updateToast, afterClosed } = container.addToast(this);\n        this.dispose = dispose;\n        this.updateMessage = updateMessage;\n        this.updateToast = updateToast;\n        this.afterClosed = race(this._onClosed.asObservable(), afterClosed);\n        return this;\n    }\n    /**\n     * Closes the toast\n     *\n     * @param [closeData={ dismissedByAction: false }] -\n     * Make sure to pass { dismissedByAction: true } when closing from template\n     * @memberof HotToastRef\n     */\n    close(closeData = { dismissedByAction: false }) {\n        this._dispose();\n        this._onClosed.next({ dismissedByAction: closeData.dismissedByAction, id: this.toast.id });\n        this._onClosed.complete();\n    }\n}\n\nconst animate = (element, value) => {\n    element.style.animation = value;\n};\n\nclass AnimatedIconComponent {\n}\nAnimatedIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: AnimatedIconComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAnimatedIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.1\", type: AnimatedIconComponent, selector: \"hot-toast-animated-icon\", inputs: { iconTheme: \"iconTheme\" }, ngImport: i0, template: \"<div class=\\\"hot-toast-animated-icon\\\" [style.color]=\\\"iconTheme?.primary\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, preserveWhitespaces: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: AnimatedIconComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'hot-toast-animated-icon', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"hot-toast-animated-icon\\\" [style.color]=\\\"iconTheme?.primary\\\">\\n  <ng-content></ng-content>\\n</div>\\n\" }]\n        }], propDecorators: { iconTheme: [{\n                type: Input\n            }] } });\n\nclass CheckMarkComponent {\n}\nCheckMarkComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: CheckMarkComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCheckMarkComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.1\", type: CheckMarkComponent, selector: \"hot-toast-checkmark\", inputs: { theme: \"theme\" }, ngImport: i0, template: \"<div\\n  class=\\\"hot-toast-checkmark-icon\\\"\\n  [style.--check-primary]=\\\"theme?.primary\\\"\\n  [style.--check-secondary]=\\\"theme?.secondary\\\"\\n></div>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, preserveWhitespaces: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: CheckMarkComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'hot-toast-checkmark', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\n  class=\\\"hot-toast-checkmark-icon\\\"\\n  [style.--check-primary]=\\\"theme?.primary\\\"\\n  [style.--check-secondary]=\\\"theme?.secondary\\\"\\n></div>\\n\" }]\n        }], propDecorators: { theme: [{\n                type: Input\n            }] } });\n\nclass ErrorComponent {\n}\nErrorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: ErrorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nErrorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.1\", type: ErrorComponent, selector: \"hot-toast-error\", inputs: { theme: \"theme\" }, ngImport: i0, template: \"<div\\n  class=\\\"hot-toast-error-icon\\\"\\n  [style.--error-primary]=\\\"theme?.primary\\\"\\n  [style.--error-secondary]=\\\"theme?.secondary\\\"\\n></div>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, preserveWhitespaces: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: ErrorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'hot-toast-error', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\n  class=\\\"hot-toast-error-icon\\\"\\n  [style.--error-primary]=\\\"theme?.primary\\\"\\n  [style.--error-secondary]=\\\"theme?.secondary\\\"\\n></div>\\n\" }]\n        }], propDecorators: { theme: [{\n                type: Input\n            }] } });\n\nclass LoaderComponent {\n}\nLoaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: LoaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLoaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.1\", type: LoaderComponent, selector: \"hot-toast-loader\", inputs: { theme: \"theme\" }, ngImport: i0, template: \"<div\\n  class=\\\"hot-toast-loader-icon\\\"\\n  [ngStyle]=\\\"{ 'border-color': theme?.primary, 'border-right-color': theme?.secondary }\\\"\\n></div>\\n\", dependencies: [{ kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, preserveWhitespaces: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: LoaderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'hot-toast-loader', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\n  class=\\\"hot-toast-loader-icon\\\"\\n  [ngStyle]=\\\"{ 'border-color': theme?.primary, 'border-right-color': theme?.secondary }\\\"\\n></div>\\n\" }]\n        }], propDecorators: { theme: [{\n                type: Input\n            }] } });\n\nclass WarningComponent {\n}\nWarningComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: WarningComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nWarningComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.1\", type: WarningComponent, selector: \"hot-toast-warning\", inputs: { theme: \"theme\" }, ngImport: i0, template: \"<div\\n  class=\\\"hot-toast-warning-icon\\\"\\n  [style.--warn-primary]=\\\"theme?.primary\\\"\\n  [style.--warn-secondary]=\\\"theme?.secondary\\\"\\n></div>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, preserveWhitespaces: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: WarningComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'hot-toast-warning', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\n  class=\\\"hot-toast-warning-icon\\\"\\n  [style.--warn-primary]=\\\"theme?.primary\\\"\\n  [style.--warn-secondary]=\\\"theme?.secondary\\\"\\n></div>\\n\" }]\n        }], propDecorators: { theme: [{\n                type: Input\n            }] } });\n\nclass InfoComponent {\n}\nInfoComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: InfoComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nInfoComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.1\", type: InfoComponent, selector: \"hot-toast-info\", inputs: { theme: \"theme\" }, ngImport: i0, template: \"<div\\n  class=\\\"hot-toast-info-icon\\\"\\n  [style.--warn-primary]=\\\"theme?.primary\\\"\\n  [style.--warn-secondary]=\\\"theme?.secondary\\\"\\n></div>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, preserveWhitespaces: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: InfoComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'hot-toast-info', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\n  class=\\\"hot-toast-info-icon\\\"\\n  [style.--warn-primary]=\\\"theme?.primary\\\"\\n  [style.--warn-secondary]=\\\"theme?.secondary\\\"\\n></div>\\n\" }]\n        }], propDecorators: { theme: [{\n                type: Input\n            }] } });\n\nclass IndicatorComponent {\n}\nIndicatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: IndicatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nIndicatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.1\", type: IndicatorComponent, selector: \"hot-toast-indicator\", inputs: { theme: \"theme\", type: \"type\" }, ngImport: i0, template: \"<div *ngIf=\\\"type !== 'blank'\\\" class=\\\"hot-toast-indicator-wrapper\\\">\\n  <hot-toast-loader [theme]=\\\"theme\\\"></hot-toast-loader>\\n  <div *ngIf=\\\"type !== 'loading'\\\" class=\\\"hot-toast-status-wrapper\\\">\\n    <div [ngSwitch]=\\\"type\\\">\\n      <div *ngSwitchCase=\\\"'error'\\\">\\n        <hot-toast-error [theme]=\\\"theme\\\"></hot-toast-error>\\n      </div>\\n      <div *ngSwitchCase=\\\"'success'\\\">\\n        <hot-toast-checkmark [theme]=\\\"theme\\\"></hot-toast-checkmark>\\n      </div>\\n      <div *ngSwitchCase=\\\"'warning'\\\">\\n        <hot-toast-warning [theme]=\\\"theme\\\"></hot-toast-warning>\\n      </div>\\n      <div *ngSwitchCase=\\\"'info'\\\">\\n        <hot-toast-info [theme]=\\\"theme\\\"></hot-toast-info>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"component\", type: CheckMarkComponent, selector: \"hot-toast-checkmark\", inputs: [\"theme\"] }, { kind: \"component\", type: ErrorComponent, selector: \"hot-toast-error\", inputs: [\"theme\"] }, { kind: \"component\", type: LoaderComponent, selector: \"hot-toast-loader\", inputs: [\"theme\"] }, { kind: \"component\", type: WarningComponent, selector: \"hot-toast-warning\", inputs: [\"theme\"] }, { kind: \"component\", type: InfoComponent, selector: \"hot-toast-info\", inputs: [\"theme\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, preserveWhitespaces: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: IndicatorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'hot-toast-indicator', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div *ngIf=\\\"type !== 'blank'\\\" class=\\\"hot-toast-indicator-wrapper\\\">\\n  <hot-toast-loader [theme]=\\\"theme\\\"></hot-toast-loader>\\n  <div *ngIf=\\\"type !== 'loading'\\\" class=\\\"hot-toast-status-wrapper\\\">\\n    <div [ngSwitch]=\\\"type\\\">\\n      <div *ngSwitchCase=\\\"'error'\\\">\\n        <hot-toast-error [theme]=\\\"theme\\\"></hot-toast-error>\\n      </div>\\n      <div *ngSwitchCase=\\\"'success'\\\">\\n        <hot-toast-checkmark [theme]=\\\"theme\\\"></hot-toast-checkmark>\\n      </div>\\n      <div *ngSwitchCase=\\\"'warning'\\\">\\n        <hot-toast-warning [theme]=\\\"theme\\\"></hot-toast-warning>\\n      </div>\\n      <div *ngSwitchCase=\\\"'info'\\\">\\n        <hot-toast-info [theme]=\\\"theme\\\"></hot-toast-info>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\" }]\n        }], propDecorators: { theme: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }] } });\n\nclass HotToastComponent {\n    constructor(injector, renderer, ngZone) {\n        this.injector = injector;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.offset = 0;\n        this.height = new EventEmitter();\n        this.beforeClosed = new EventEmitter();\n        this.afterClosed = new EventEmitter();\n        this.isManualClose = false;\n        this.unlisteners = [];\n    }\n    get containerPositionStyle() {\n        const top = this.toast.position.includes('top');\n        const verticalStyle = top ? { top: 0 } : { bottom: 0 };\n        const horizontalStyle = this.toast.position.includes('left')\n            ? {\n                left: 0,\n            }\n            : this.toast.position.includes('right')\n                ? {\n                    right: 0,\n                }\n                : {\n                    left: 0,\n                    right: 0,\n                    justifyContent: 'center',\n                };\n        return {\n            transform: `translateY(${this.offset * (top ? 1 : -1)}px)`,\n            ...verticalStyle,\n            ...horizontalStyle,\n        };\n    }\n    get toastBarBaseStyles() {\n        const top = this.toast.position.includes('top');\n        const enterAnimation = `hotToastEnterAnimation${top ? 'Negative' : 'Positive'} ${ENTER_ANIMATION_DURATION}ms cubic-bezier(0.21, 1.02, 0.73, 1) forwards`;\n        const exitAnimation = `hotToastExitAnimation${top ? 'Negative' : 'Positive'} ${EXIT_ANIMATION_DURATION}ms forwards cubic-bezier(0.06, 0.71, 0.55, 1) ${this.toast.duration}ms`;\n        const animation = this.toast.autoClose ? `${enterAnimation}, ${exitAnimation}` : enterAnimation;\n        return { ...this.toast.style, animation };\n    }\n    get isIconString() {\n        return typeof this.toast.icon === 'string';\n    }\n    ngOnInit() {\n        if (isTemplateRef(this.toast.message)) {\n            this.context = { $implicit: this.toastRef };\n        }\n        if (isComponent(this.toast.message)) {\n            this.toastComponentInjector = Injector.create({\n                providers: [\n                    {\n                        provide: HotToastRef,\n                        useValue: this.toastRef,\n                    },\n                ],\n                parent: this.toast.injector || this.injector,\n            });\n        }\n    }\n    ngAfterViewInit() {\n        const nativeElement = this.toastBarBase.nativeElement;\n        // Caretaker note: accessing `offsetHeight` triggers the whole layout update.\n        // Macro tasks (like `setTimeout`) might be executed within the current rendering frame and cause a frame drop.\n        requestAnimationFrame(() => {\n            this.height.emit(nativeElement.offsetHeight);\n        });\n        // Caretaker note: `animationstart` and `animationend` events are event tasks that trigger change detection.\n        // We'd want to trigger the change detection only if it's an exit animation.\n        this.ngZone.runOutsideAngular(() => {\n            this.unlisteners.push(\n            // Caretaker note: we have to remove these event listeners at the end (even if the element is removed from DOM).\n            // zone.js stores its `ZoneTask`s within the `nativeElement[Zone.__symbol__('animationstart') + 'false']` property\n            // with callback that capture `this`.\n            this.renderer.listen(nativeElement, 'animationstart', (event) => {\n                if (this.isExitAnimation(event)) {\n                    this.ngZone.run(() => this.beforeClosed.emit());\n                }\n            }), this.renderer.listen(nativeElement, 'animationend', (event) => {\n                if (this.isExitAnimation(event)) {\n                    this.ngZone.run(() => this.afterClosed.emit({ dismissedByAction: this.isManualClose, id: this.toast.id }));\n                }\n            }));\n        });\n        this.setToastAttributes();\n    }\n    close() {\n        this.isManualClose = true;\n        const top = this.toast.position.includes('top');\n        const exitAnimation = `hotToastExitAnimation${top ? 'Negative' : 'Positive'} ${EXIT_ANIMATION_DURATION}ms forwards cubic-bezier(0.06, 0.71, 0.55, 1)`;\n        const nativeElement = this.toastBarBase.nativeElement;\n        animate(nativeElement, exitAnimation);\n    }\n    ngOnDestroy() {\n        this.close();\n        while (this.unlisteners.length) {\n            this.unlisteners.pop()();\n        }\n    }\n    isExitAnimation(ev) {\n        return ev.animationName.includes('hotToastExitAnimation');\n    }\n    setToastAttributes() {\n        const toastAttributes = this.toast.attributes;\n        for (const [key, value] of Object.entries(toastAttributes)) {\n            this.renderer.setAttribute(this.toastBarBase.nativeElement, key, value);\n        }\n    }\n}\nHotToastComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: HotToastComponent, deps: [{ token: i0.Injector }, { token: i0.Renderer2 }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nHotToastComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.1\", type: HotToastComponent, selector: \"hot-toast\", inputs: { toast: \"toast\", offset: \"offset\", defaultConfig: \"defaultConfig\", toastRef: \"toastRef\" }, outputs: { height: \"height\", beforeClosed: \"beforeClosed\", afterClosed: \"afterClosed\" }, viewQueries: [{ propertyName: \"toastBarBase\", first: true, predicate: [\"hotToastBarBase\"], descendants: true }], ngImport: i0, template: \"<div\\n  class=\\\"hot-toast-bar-base-container\\\"\\n  [ngStyle]=\\\"containerPositionStyle\\\"\\n  [ngClass]=\\\"'hot-toast-theme-' + toast.theme\\\"\\n>\\n  <div\\n    class=\\\"hot-toast-bar-base\\\"\\n    #hotToastBarBase\\n    [ngStyle]=\\\"toastBarBaseStyles\\\"\\n    [ngClass]=\\\"toast.className\\\"\\n    [style.--hot-toast-animation-state]=\\\"isManualClose ? 'running' : 'paused'\\\"\\n    [attr.aria-live]=\\\"toast.ariaLive\\\"\\n    [attr.role]=\\\"toast.role\\\"\\n  >\\n    <div class=\\\"hot-toast-icon\\\" aria-hidden=\\\"true\\\">\\n      <ng-container *ngIf=\\\"toast.icon !== undefined; else indicator\\\">\\n        <ng-container *ngIf=\\\"isIconString; else iconTemplateOrComponent\\\">\\n          <hot-toast-animated-icon [iconTheme]=\\\"toast.iconTheme\\\">{{ toast.icon }}</hot-toast-animated-icon>\\n        </ng-container>\\n        <ng-template #iconTemplateOrComponent>\\n          <div>\\n            <ng-container [dynamicView]=\\\"toast.icon\\\"></ng-container>\\n          </div>\\n        </ng-template>\\n      </ng-container>\\n\\n      <ng-template #indicator>\\n        <hot-toast-indicator [theme]=\\\"toast.iconTheme\\\" [type]=\\\"toast.type\\\"></hot-toast-indicator>\\n      </ng-template>\\n    </div>\\n\\n    <div class=\\\"hot-toast-message\\\">\\n      <div>\\n        <ng-container *dynamicView=\\\"toast.message; context: context; injector: toastComponentInjector\\\"></ng-container>\\n      </div>\\n    </div>\\n\\n    <button\\n      *ngIf=\\\"toast.dismissible\\\"\\n      (click)=\\\"close()\\\"\\n      type=\\\"button\\\"\\n      class=\\\"hot-toast-close-btn\\\"\\n      aria-label=\\\"Close\\\"\\n      [ngStyle]=\\\"toast.closeStyle\\\"\\n    ></button>\\n  </div>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i1$1.DynamicViewDirective, selector: \"[dynamicView]\", inputs: [\"dynamicView\", \"dynamicViewInjector\", \"dynamicViewContext\"] }, { kind: \"component\", type: AnimatedIconComponent, selector: \"hot-toast-animated-icon\", inputs: [\"iconTheme\"] }, { kind: \"component\", type: IndicatorComponent, selector: \"hot-toast-indicator\", inputs: [\"theme\", \"type\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, preserveWhitespaces: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: HotToastComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'hot-toast', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\n  class=\\\"hot-toast-bar-base-container\\\"\\n  [ngStyle]=\\\"containerPositionStyle\\\"\\n  [ngClass]=\\\"'hot-toast-theme-' + toast.theme\\\"\\n>\\n  <div\\n    class=\\\"hot-toast-bar-base\\\"\\n    #hotToastBarBase\\n    [ngStyle]=\\\"toastBarBaseStyles\\\"\\n    [ngClass]=\\\"toast.className\\\"\\n    [style.--hot-toast-animation-state]=\\\"isManualClose ? 'running' : 'paused'\\\"\\n    [attr.aria-live]=\\\"toast.ariaLive\\\"\\n    [attr.role]=\\\"toast.role\\\"\\n  >\\n    <div class=\\\"hot-toast-icon\\\" aria-hidden=\\\"true\\\">\\n      <ng-container *ngIf=\\\"toast.icon !== undefined; else indicator\\\">\\n        <ng-container *ngIf=\\\"isIconString; else iconTemplateOrComponent\\\">\\n          <hot-toast-animated-icon [iconTheme]=\\\"toast.iconTheme\\\">{{ toast.icon }}</hot-toast-animated-icon>\\n        </ng-container>\\n        <ng-template #iconTemplateOrComponent>\\n          <div>\\n            <ng-container [dynamicView]=\\\"toast.icon\\\"></ng-container>\\n          </div>\\n        </ng-template>\\n      </ng-container>\\n\\n      <ng-template #indicator>\\n        <hot-toast-indicator [theme]=\\\"toast.iconTheme\\\" [type]=\\\"toast.type\\\"></hot-toast-indicator>\\n      </ng-template>\\n    </div>\\n\\n    <div class=\\\"hot-toast-message\\\">\\n      <div>\\n        <ng-container *dynamicView=\\\"toast.message; context: context; injector: toastComponentInjector\\\"></ng-container>\\n      </div>\\n    </div>\\n\\n    <button\\n      *ngIf=\\\"toast.dismissible\\\"\\n      (click)=\\\"close()\\\"\\n      type=\\\"button\\\"\\n      class=\\\"hot-toast-close-btn\\\"\\n      aria-label=\\\"Close\\\"\\n      [ngStyle]=\\\"toast.closeStyle\\\"\\n    ></button>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.Renderer2 }, { type: i0.NgZone }]; }, propDecorators: { toast: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], defaultConfig: [{\n                type: Input\n            }], toastRef: [{\n                type: Input\n            }], height: [{\n                type: Output\n            }], beforeClosed: [{\n                type: Output\n            }], afterClosed: [{\n                type: Output\n            }], toastBarBase: [{\n                type: ViewChild,\n                args: ['hotToastBarBase']\n            }] } });\n\nclass HotToastContainerComponent {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.toasts = [];\n        this.toastRefs = [];\n        /** Subject for notifying the user that the toast has been closed. */\n        this._onClosed = new Subject();\n        this.onClosed$ = this._onClosed.asObservable();\n    }\n    trackById(index, toast) {\n        return toast.id;\n    }\n    calculateOffset(toastId, position) {\n        const visibleToasts = this.toasts.filter((t) => t.visible && t.position === position);\n        const index = visibleToasts.findIndex((toast) => toast.id === toastId);\n        const offset = index !== -1\n            ? visibleToasts\n                .slice(...(this.defaultConfig.reverseOrder ? [index + 1] : [0, index]))\n                .reduce((acc, t) => acc + (t.height || 0) + HOT_TOAST_MARGIN, 0)\n            : 0;\n        return offset;\n    }\n    updateHeight(height, toast) {\n        toast.height = height;\n        this.cdr.detectChanges();\n    }\n    addToast(ref) {\n        this.toastRefs.push(ref);\n        const toast = ref.getToast();\n        this.toasts.push(ref.getToast());\n        this.cdr.detectChanges();\n        return {\n            dispose: () => {\n                this.closeToast(toast.id);\n            },\n            updateMessage: (message) => {\n                toast.message = message;\n                this.cdr.detectChanges();\n            },\n            updateToast: (options) => {\n                this.updateToasts(toast, options);\n                this.cdr.detectChanges();\n            },\n            afterClosed: this.getAfterClosed(toast),\n        };\n    }\n    closeToast(id) {\n        if (id) {\n            const comp = this.hotToastComponentList.find((item) => item.toast.id === id);\n            if (comp) {\n                comp.close();\n            }\n        }\n        else {\n            this.hotToastComponentList.forEach((comp) => comp.close());\n        }\n    }\n    beforeClosed(toast) {\n        toast.visible = false;\n    }\n    afterClosed(closeToast) {\n        const toastIndex = this.toasts.findIndex((t) => t.id === closeToast.id);\n        if (toastIndex > -1) {\n            this._onClosed.next(closeToast);\n            this.toasts = this.toasts.filter((t) => t.id !== closeToast.id);\n            this.toastRefs = this.toastRefs.filter((t) => t.getToast().id !== closeToast.id);\n            this.cdr.detectChanges();\n        }\n    }\n    hasToast(id) {\n        return this.toasts.findIndex((t) => t.id === id) > -1;\n    }\n    getAfterClosed(toast) {\n        return this.onClosed$.pipe(filter((v) => v.id === toast.id));\n    }\n    updateToasts(toast, options) {\n        this.toasts = this.toasts.map((t) => ({ ...t, ...(t.id === toast.id && { ...toast, ...options }) }));\n    }\n}\nHotToastContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: HotToastContainerComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nHotToastContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.1\", type: HotToastContainerComponent, selector: \"hot-toast-container\", inputs: { defaultConfig: \"defaultConfig\" }, viewQueries: [{ propertyName: \"hotToastComponentList\", predicate: HotToastComponent, descendants: true }], ngImport: i0, template: \"<div style=\\\"position: fixed; z-index: 9999; top: 0; right: 0; bottom: 0; left: 0; pointer-events: none\\\">\\n  <div style=\\\"position: relative; height: 100%\\\">\\n    <hot-toast\\n      *ngFor=\\\"let toast of toasts; trackBy: trackById; let i = index\\\"\\n      [toast]=\\\"toast\\\"\\n      [offset]=\\\"calculateOffset(toast.id, toast.position)\\\"\\n      [toastRef]=\\\"toastRefs[i]\\\"\\n      (height)=\\\"updateHeight($event, toast)\\\"\\n      (beforeClosed)=\\\"beforeClosed(toast)\\\"\\n      (afterClosed)=\\\"afterClosed($event)\\\"\\n    ></hot-toast>\\n  </div>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"component\", type: HotToastComponent, selector: \"hot-toast\", inputs: [\"toast\", \"offset\", \"defaultConfig\", \"toastRef\"], outputs: [\"height\", \"beforeClosed\", \"afterClosed\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, preserveWhitespaces: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: HotToastContainerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'hot-toast-container', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div style=\\\"position: fixed; z-index: 9999; top: 0; right: 0; bottom: 0; left: 0; pointer-events: none\\\">\\n  <div style=\\\"position: relative; height: 100%\\\">\\n    <hot-toast\\n      *ngFor=\\\"let toast of toasts; trackBy: trackById; let i = index\\\"\\n      [toast]=\\\"toast\\\"\\n      [offset]=\\\"calculateOffset(toast.id, toast.position)\\\"\\n      [toastRef]=\\\"toastRefs[i]\\\"\\n      (height)=\\\"updateHeight($event, toast)\\\"\\n      (beforeClosed)=\\\"beforeClosed(toast)\\\"\\n      (afterClosed)=\\\"afterClosed($event)\\\"\\n    ></hot-toast>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { defaultConfig: [{\n                type: Input\n            }], hotToastComponentList: [{\n                type: ViewChildren,\n                args: [HotToastComponent]\n            }] } });\n\nclass ToastConfig {\n    constructor() {\n        /**\n         * Sets the reverse order for hot-toast stacking\n         *\n         * @default false\n         */\n        this.reverseOrder = false;\n        this.ariaLive = 'polite';\n        this.role = 'status';\n        this.position = 'top-center';\n        this.autoClose = true;\n        this.theme = 'toast';\n        this.attributes = {};\n        // key in ToastType\n        this.info = { content: '' };\n        this.success = { content: '' };\n        this.error = { content: '' };\n        this.loading = { content: '' };\n        this.blank = { content: '' };\n        this.warning = { content: '' };\n    }\n}\nconst isFunction = (valOrFunction) => typeof valOrFunction === 'function';\nconst resolveValueOrFunction = (valOrFunction, arg) => isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction;\nclass ToastPersistConfig {\n    constructor() {\n        /**\n         *In which storage id vs. counts should be stored\n         *\n         * @type {('local' | 'session')}\n         * @memberof ToastPersistConfig\n         * @default 'local'\n         */\n        this.storage = 'local';\n        /**\n         *The key pattern to store object in storage. `${id}` in pattern is replaced with actual toast id.\n         *\n         * @type {('local' | 'session')}\n         * @memberof ToastPersistConfig\n         * @default 'ngneat/hottoast-${id}'\n         */\n        this.key = 'ngneat/hototast-${id}';\n        /**\n         *The number of toasts allowed to show.\n         *\n         * @memberof ToastPersistConfig\n         * @default 1\n         */\n        this.count = 1;\n        this.enabled = false;\n    }\n}\n\nclass HotToastService {\n    constructor(_viewService, platformId, config) {\n        this._viewService = _viewService;\n        this.platformId = platformId;\n        this._isInitialized = false;\n        this._defaultConfig = new ToastConfig();\n        this._defaultPersistConfig = new ToastPersistConfig();\n        if (config) {\n            this._defaultConfig = {\n                ...this._defaultConfig,\n                ...config,\n            };\n        }\n    }\n    get defaultConfig() {\n        return this._defaultConfig;\n    }\n    set defaultConfig(config) {\n        this._defaultConfig = {\n            ...this._defaultConfig,\n            ...config,\n        };\n        if (this._componentRef) {\n            this._componentRef.setInput('defaultConfig', this._defaultConfig);\n        }\n    }\n    /**\n     * Opens up an hot-toast without any pre-configurations\n     *\n     * @param message The message to show in the hot-toast.\n     * @param [options] Additional configuration options for the hot-toast.\n     * @returns\n     * @memberof HotToastService\n     */\n    show(message, options) {\n        const toast = this.createToast(message || this._defaultConfig.blank.content, 'blank', {\n            ...this._defaultConfig,\n            ...options,\n        });\n        return toast;\n    }\n    /**\n     * Opens up an hot-toast with pre-configurations for error state\n     *\n     * @param message The message to show in the hot-toast.\n     * @param [options] Additional configuration options for the hot-toast.\n     * @returns\n     * @memberof HotToastService\n     */\n    error(message, options) {\n        const toast = this.createToast(message || this._defaultConfig.error.content, 'error', {\n            ...this._defaultConfig,\n            ...this._defaultConfig?.error,\n            ...options,\n        });\n        return toast;\n    }\n    /**\n     * Opens up an hot-toast with pre-configurations for success state\n     *\n     * @param message The message to show in the hot-toast.\n     * @param [options] Additional configuration options for the hot-toast.\n     * @returns\n     * @memberof HotToastService\n     */\n    success(message, options) {\n        const toast = this.createToast(message || this._defaultConfig.success.content, 'success', {\n            ...this._defaultConfig,\n            ...this._defaultConfig?.success,\n            ...options,\n        });\n        return toast;\n    }\n    /**\n     * Opens up an hot-toast with pre-configurations for loading state\n     *\n     * @param message The message to show in the hot-toast.\n     * @param [options] Additional configuration options for the hot-toast.\n     * @returns\n     * @memberof HotToastService\n     */\n    loading(message, options) {\n        const toast = this.createToast(message || this._defaultConfig.loading.content, 'loading', {\n            ...this._defaultConfig,\n            ...this._defaultConfig?.loading,\n            ...options,\n        });\n        return toast;\n    }\n    /**\n     * Opens up an hot-toast with pre-configurations for warning state\n     *\n     * @param message The message to show in the hot-toast.\n     * @param [options] Additional configuration options for the hot-toast.\n     * @returns\n     * @memberof HotToastService\n     */\n    warning(message, options) {\n        const toast = this.createToast(message || this._defaultConfig.warning.content, 'warning', {\n            ...this._defaultConfig,\n            ...this._defaultConfig?.warning,\n            ...options,\n        });\n        return toast;\n    }\n    /**\n     * Opens up an hot-toast with pre-configurations for info state\n     *\n     * @param message The message to show in the hot-toast.\n     * @param [options] Additional configuration options for the hot-toast.\n     * @returns\n     * @memberof HotToastService\n     * @since 3.3.0\n     */\n    info(message, options) {\n        const toast = this.createToast(message || this._defaultConfig.info.content, 'info', {\n            ...this._defaultConfig,\n            ...this._defaultConfig?.info,\n            ...options,\n        });\n        return toast;\n    }\n    /**\n     *\n     *  Opens up an hot-toast with pre-configurations for loading initially and then changes state based on messages\n     *\n     * @template T Type of observable\n     * @param messages Messages for each state i.e. loading, success and error\n     * @returns\n     * @memberof HotToastService\n     */\n    observe(messages) {\n        return (source) => {\n            let toastRef;\n            let start = 0;\n            const loadingContent = messages.loading ?? this._defaultConfig.loading?.content;\n            const successContent = messages.success ?? this._defaultConfig.success?.content;\n            const errorContent = messages.error ?? this._defaultConfig.error?.content;\n            return defer(() => {\n                if (loadingContent) {\n                    toastRef = this.createLoadingToast(loadingContent);\n                    start = Date.now();\n                }\n                return source.pipe(tap({\n                    ...(successContent && {\n                        next: (val) => {\n                            toastRef = this.createOrUpdateToast(messages, val, toastRef, 'success', start === 0 ? start : Date.now() - start);\n                        },\n                    }),\n                    ...(errorContent && {\n                        error: (e) => {\n                            toastRef = this.createOrUpdateToast(messages, e, toastRef, 'error', start === 0 ? start : Date.now() - start);\n                        },\n                    }),\n                }));\n            });\n        };\n    }\n    /**\n     * Closes the hot-toast\n     *\n     * @param [id] - ID of the toast\n     * @since 3.0.1 - If ID is not provided, all toasts will be closed\n     */\n    close(id) {\n        if (this._componentRef) {\n            this._componentRef.ref.instance.closeToast(id);\n        }\n    }\n    /**\n     * Used for internal purpose only.\n     * Creates a container component and attaches it to document.body.\n     */\n    init() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        this._componentRef = this._viewService\n            .createComponent(HotToastContainerComponent)\n            .setInput('defaultConfig', this._defaultConfig)\n            .appendTo(document.body);\n    }\n    createOrUpdateToast(messages, val, toastRef, type, diff) {\n        let content = null;\n        let options = {};\n        ({ content, options } = this.getContentAndOptions(type, messages[type] || (this._defaultConfig[type] ? this._defaultConfig[type].content : '')));\n        content = resolveValueOrFunction(content, val);\n        if (toastRef) {\n            toastRef.updateMessage(content);\n            const updatedOptions = {\n                type,\n                duration: diff + HOT_TOAST_DEFAULT_TIMEOUTS[type],\n                ...options,\n                ...(options.duration && { duration: diff + options.duration }),\n            };\n            toastRef.updateToast(updatedOptions);\n        }\n        else {\n            this.createToast(content, type, options);\n        }\n        return toastRef;\n    }\n    createToast(message, type, options, observableMessages) {\n        if (!this._isInitialized) {\n            this._isInitialized = true;\n            this.init();\n        }\n        const now = Date.now();\n        const id = options?.id ?? now.toString();\n        if (!this.isDuplicate(id) &&\n            (!options.persist?.enabled || (options.persist?.enabled && this.handleStorageValue(id, options)))) {\n            const toast = {\n                ariaLive: options?.ariaLive ?? 'polite',\n                createdAt: now,\n                duration: options?.duration ?? HOT_TOAST_DEFAULT_TIMEOUTS[type],\n                id,\n                message,\n                role: options?.role ?? 'status',\n                type,\n                visible: true,\n                observableMessages: observableMessages ?? undefined,\n                ...options,\n            };\n            return new HotToastRef(toast).appendTo(this._componentRef.ref.instance);\n        }\n    }\n    /**\n     * Checks whether any toast with same id is present.\n     *\n     * @private\n     * @param id - Toast ID\n     */\n    isDuplicate(id) {\n        return this._componentRef.ref.instance.hasToast(id);\n    }\n    /**\n     * Creates an entry in local or session storage with count ${defaultConfig.persist.count}, if not present.\n     * If present in storage, reduces the count\n     * and returns the count.\n     * Count can not be less than 0.\n     */\n    handleStorageValue(id, options) {\n        let count = 1;\n        const persist = { ...this._defaultPersistConfig, ...options.persist };\n        const storage = persist.storage === 'local' ? localStorage : sessionStorage;\n        const key = persist.key.replace(/\\${id}/g, id);\n        let item = storage.getItem(key);\n        if (item) {\n            item = parseInt(item, 10);\n            if (item > 0) {\n                count = item - 1;\n            }\n            else {\n                count = item;\n            }\n        }\n        else {\n            count = persist.count;\n        }\n        storage.setItem(key, count.toString());\n        return count;\n    }\n    getContentAndOptions(toastType, message) {\n        let content;\n        let options = {\n            ...this._defaultConfig,\n            ...this._defaultConfig[toastType],\n        };\n        // typeof message === 'object' won't work, cz TemplateRef's type is object\n        if (typeof message === 'string' || isTemplateRef(message) || isComponent(message)) {\n            content = message;\n        }\n        else {\n            let restOptions;\n            ({ content, ...restOptions } = message);\n            options = { ...options, ...restOptions };\n        }\n        return { content, options };\n    }\n    createLoadingToast(messages) {\n        let content = null;\n        let options = {};\n        ({ content, options } = this.getContentAndOptions('loading', messages));\n        return this.loading(content, options);\n    }\n}\nHotToastService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: HotToastService, deps: [{ token: i1$1.ViewService }, { token: PLATFORM_ID }, { token: ToastConfig, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nHotToastService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: HotToastService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: HotToastService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1$1.ViewService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: ToastConfig, decorators: [{\n                    type: Optional\n                }] }]; } });\n\nclass HotToastModule {\n    static forRoot(config) {\n        return {\n            ngModule: HotToastModule,\n            providers: [{ provide: ToastConfig, useValue: config }],\n        };\n    }\n}\nHotToastModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: HotToastModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nHotToastModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.1\", ngImport: i0, type: HotToastModule, declarations: [HotToastContainerComponent,\n        HotToastComponent,\n        AnimatedIconComponent,\n        IndicatorComponent,\n        CheckMarkComponent,\n        ErrorComponent,\n        LoaderComponent,\n        WarningComponent,\n        InfoComponent], imports: [CommonModule, DynamicViewModule] });\nHotToastModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: HotToastModule, imports: [CommonModule, DynamicViewModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.1\", ngImport: i0, type: HotToastModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        HotToastContainerComponent,\n                        HotToastComponent,\n                        AnimatedIconComponent,\n                        IndicatorComponent,\n                        CheckMarkComponent,\n                        ErrorComponent,\n                        LoaderComponent,\n                        WarningComponent,\n                        InfoComponent,\n                    ],\n                    imports: [CommonModule, DynamicViewModule],\n                }]\n        }] });\n\n/*\n * Public API Surface of hot-toast\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HotToastModule, HotToastRef, HotToastService, ToastConfig, ToastPersistConfig, resolveValueOrFunction };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}