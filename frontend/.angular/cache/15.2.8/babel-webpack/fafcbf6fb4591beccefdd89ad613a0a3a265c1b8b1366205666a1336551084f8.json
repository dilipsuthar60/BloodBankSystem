{"ast":null,"code":"\"use strict\";\n\n// import { Component } from '@angular/core';\n// import { NgForm } from '@angular/forms';\n// import { Router } from '@angular/router';\n// import { HotToastService } from '@ngneat/hot-toast';\n// import { BloodBankService } from '../blood-bank.service';\n// @Component({\n//   selector: 'app-donor-signup',\n//   templateUrl: './donor-signup.component.html',\n//   styleUrls: ['./donor-signup.component.css']\n// })\n// export class DonorSignupComponent {\n//   bloodGroups: string[] = ['A+', 'A-', 'AB+', 'AB-', 'B+', 'B-', 'O+', 'O-'];\n//   conditions: string[] = ['None', 'Diabetes', 'Blood Pressure', 'Heart Problem', 'Any Other'];\n//   addForm!: NgForm;\n//   isBelowMinimumAge = false;\n//   submitted: boolean = false;\n//   constructor(\n//     private toast: HotToastService,\n//     private router: Router,\n//     private bloodBankService: BloodBankService\n//   ) {}\n//   onSubmit(item: NgForm) {\n//     this.submitted = true;\n//     if(item.invalid){\n//       this.toast.error('Cannot register with empty fieldsðŸ™„')\n//       return;\n//     }\n//     console.log(item.value);\n//     // this.bloodBankService.createDonor(item.value).subscribe(\n//     //   (data: any) => {\n//     //     console.log(data)\n//     //     this.toast\n//     //   }, error => {\n//     //     console.log(error)\n//     //     this.toast.error('Select Gender')\n//     //   }\n//     // )\n//     const itemm = {...item.value};\n//     delete itemm.confirmPassword;\n//     console.log(itemm)\n//     this.bloodBankService.createDonor(itemm).pipe(\n//       this.toast.observe({\n//         loading: 'Saving...',\n//         success: (s) => 'Registered Successfully',\n//         error: (e) => 'Cannot register with empty fieldsðŸ™„'\n//       })\n//     ).subscribe(\n//       (data: any) => {\n//         console.log(data)\n//         this.router.navigate(['admin-login']);\n//       }\n//     );\n//   }\n//   checkAge(dob: Date): void {\n//     const selectedDate = new Date(dob);\n//     const minimumDate = new Date();\n//     minimumDate.setFullYear(minimumDate.getFullYear() - 18);\n//     if (selectedDate > minimumDate) {\n//       this.isBelowMinimumAge = true;\n//     } else {\n//       this.isBelowMinimumAge = false;\n//     }\n//   }\n// }","map":{"version":3,"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","names":[],"sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\Arcs Infotech\\blood-bank-system\\src\\app\\donor-signup\\donor-signup.component.ts"],"sourcesContent":["// import { Component } from '@angular/core';\n// import { NgForm } from '@angular/forms';\n// import { Router } from '@angular/router';\n// import { HotToastService } from '@ngneat/hot-toast';\n// import { BloodBankService } from '../blood-bank.service';\n\n// @Component({\n//   selector: 'app-donor-signup',\n//   templateUrl: './donor-signup.component.html',\n//   styleUrls: ['./donor-signup.component.css']\n// })\n// export class DonorSignupComponent {\n//   bloodGroups: string[] = ['A+', 'A-', 'AB+', 'AB-', 'B+', 'B-', 'O+', 'O-'];\n//   conditions: string[] = ['None', 'Diabetes', 'Blood Pressure', 'Heart Problem', 'Any Other'];\n\n//   addForm!: NgForm;\n\n//   isBelowMinimumAge = false;\n\n//   submitted: boolean = false;\n\n//   constructor(\n//     private toast: HotToastService,\n//     private router: Router,\n//     private bloodBankService: BloodBankService\n//   ) {}\n\n//   onSubmit(item: NgForm) {\n//     this.submitted = true;\n//     if(item.invalid){\n//       this.toast.error('Cannot register with empty fieldsðŸ™„')\n//       return;\n//     }\n//     console.log(item.value);\n\n//     // this.bloodBankService.createDonor(item.value).subscribe(\n//     //   (data: any) => {\n//     //     console.log(data)\n//     //     this.toast\n//     //   }, error => {\n//     //     console.log(error)\n//     //     this.toast.error('Select Gender')\n//     //   }\n//     // )\n\n//     const itemm = {...item.value};\n//     delete itemm.confirmPassword;\n//     console.log(itemm)\n\n//     this.bloodBankService.createDonor(itemm).pipe(\n//       this.toast.observe({\n//         loading: 'Saving...',\n//         success: (s) => 'Registered Successfully',\n//         error: (e) => 'Cannot register with empty fieldsðŸ™„'\n//       })\n//     ).subscribe(\n//       (data: any) => {\n//         console.log(data)\n//         this.router.navigate(['admin-login']);\n//       }\n//     );\n//   }\n\n\n//   checkAge(dob: Date): void {\n//     const selectedDate = new Date(dob);\n//     const minimumDate = new Date();\n//     minimumDate.setFullYear(minimumDate.getFullYear() - 18);\n\n//     if (selectedDate > minimumDate) {\n//       this.isBelowMinimumAge = true;\n//     } else {\n//       this.isBelowMinimumAge = false;\n//     }\n//   }\n// }\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}