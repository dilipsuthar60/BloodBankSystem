{"ast":null,"code":"// import { Component } from '@angular/core';\nimport { __decorate } from \"tslib\";\n// @Component({\n//   selector: 'app-loading-animation',\n//   templateUrl: './loading-animation.component.html',\n//   styleUrls: ['./loading-animation.component.css']\n// })\n// export class LoadingAnimationComponent {\n// }\nimport { Component } from '@angular/core';\nlet MyComponent = class MyComponent {\n  ngAfterViewInit() {\n    const lines = document.querySelectorAll(\"#front line\");\n    const svg = document.getElementById(\"loader\");\n    const box = svg.getBBox();\n    svg.setAttribute(\"viewBox\", `${box.x} ${box.y} ${box.width} ${box.height}`);\n    function run() {\n      for (let i = 0; i < lines.length; i += 1) {\n        const currLine = lines[i];\n        setStyle(currLine, i);\n        removeStyle(currLine, i);\n      }\n    }\n    function setStyle(currElement, i) {\n      setTimeout(() => {\n        currElement.setAttribute('style', `stroke: #ff4d4f; stroke-dasharray: ${currElement.getTotalLength()}px; stroke-dashoffset: ${currElement.getTotalLength()}px; animation: dash 0.1s ease-out forwards 0.1s; animation-delay: ${0.06 * i}s`);\n      }, i);\n    }\n    function removeStyle(element, i) {\n      setTimeout(() => {\n        element.removeAttribute(\"style\");\n      }, 100 * (i + 2) - (i + 1) * 20);\n    }\n    run();\n    setInterval(run, 2000);\n  }\n};\nMyComponent = __decorate([Component({\n  selector: 'app-my-component',\n  templateUrl: './my-component.component.html',\n  styleUrls: ['./my-component.component.css']\n})], MyComponent);\nexport { MyComponent };","map":{"version":3,"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,SAASA,SAAS,QAAuB,eAAe;AAOjD,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EACtBC,eAAe;IACb,MAAMC,KAAK,GAAQC,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC;IAC3D,MAAMC,GAAG,GAAQF,QAAQ,CAACG,cAAc,CAAC,QAAQ,CAAC;IAClD,MAAMC,GAAG,GAAQF,GAAG,CAACG,OAAO,EAAE;IAC9BH,GAAG,CAACI,YAAY,CAAC,SAAS,EAAE,GAAGF,GAAG,CAACG,CAAC,IAAIH,GAAG,CAACI,CAAC,IAAIJ,GAAG,CAACK,KAAK,IAAIL,GAAG,CAACM,MAAM,EAAE,CAAC;IAE3E,SAASC,GAAG;MACV,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,KAAK,CAACc,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;QACxC,MAAME,QAAQ,GAAQf,KAAK,CAACa,CAAC,CAAC;QAC9BG,QAAQ,CAACD,QAAQ,EAAEF,CAAC,CAAC;QACrBI,WAAW,CAACF,QAAQ,EAAEF,CAAC,CAAC;;IAE5B;IAEA,SAASG,QAAQ,CAACE,WAAgB,EAAEL,CAAM;MACxCM,UAAU,CAAC,MAAK;QACdD,WAAW,CAACX,YAAY,CACtB,OAAO,EACP,sCAAsCW,WAAW,CAACE,cAAc,EAAE,0BAA0BF,WAAW,CAACE,cAAc,EAAE,qEAAqE,IAAI,GAAGP,CAAC,GAAG,CACzM;MACH,CAAC,EAAEA,CAAC,CAAC;IACP;IAEA,SAASI,WAAW,CAACI,OAAY,EAAER,CAAM;MACvCM,UAAU,CAAC,MAAK;QACdE,OAAO,CAACC,eAAe,CAAC,OAAO,CAAC;MAClC,CAAC,EAAG,GAAG,IAAIT,CAAC,GAAG,CAAC,CAAC,GAAK,CAACA,CAAC,GAAG,CAAC,IAAI,EAAG,CAAC;IACtC;IAEAD,GAAG,EAAE;IACLW,WAAW,CAACX,GAAG,EAAE,IAAI,CAAC;EACxB;CACD;AAjCYd,WAAW,eALvBD,SAAS,CAAC;EACT2B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACW5B,WAAW,CAiCvB;SAjCYA,WAAW","names":["Component","MyComponent","ngAfterViewInit","lines","document","querySelectorAll","svg","getElementById","box","getBBox","setAttribute","x","y","width","height","run","i","length","currLine","setStyle","removeStyle","currElement","setTimeout","getTotalLength","element","removeAttribute","setInterval","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\Arcs Infotech\\blood-bank-system\\src\\app\\loading-animation\\loading-animation.component.ts"],"sourcesContent":["// import { Component } from '@angular/core';\n\n// @Component({\n//   selector: 'app-loading-animation',\n//   templateUrl: './loading-animation.component.html',\n//   styleUrls: ['./loading-animation.component.css']\n// })\n// export class LoadingAnimationComponent {\n\n// }\n\n\nimport { Component, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-component',\n  templateUrl: './my-component.component.html',\n  styleUrls: ['./my-component.component.css']\n})\nexport class MyComponent implements AfterViewInit {\n  ngAfterViewInit() {\n    const lines: any = document.querySelectorAll(\"#front line\");\n    const svg: any = document.getElementById(\"loader\");\n    const box: any = svg.getBBox();\n    svg.setAttribute(\"viewBox\", `${box.x} ${box.y} ${box.width} ${box.height}`);\n    \n    function run() {\n      for (let i = 0; i < lines.length; i += 1) {\n        const currLine: any = lines[i];\n        setStyle(currLine, i);\n        removeStyle(currLine, i);\n      }\n    }\n    \n    function setStyle(currElement: any, i: any) {\n      setTimeout(() => {\n        currElement.setAttribute(\n          'style',\n          `stroke: #ff4d4f; stroke-dasharray: ${currElement.getTotalLength()}px; stroke-dashoffset: ${currElement.getTotalLength()}px; animation: dash 0.1s ease-out forwards 0.1s; animation-delay: ${0.06 * i}s`\n        );\n      }, i);\n    }\n    \n    function removeStyle(element: any, i: any) {\n      setTimeout(() => {\n        element.removeAttribute(\"style\");\n      }, (100 * (i + 2)) - ((i + 1) * 20));\n    }\n    \n    run();\n    setInterval(run, 2000);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}