export class CompRef {
    constructor(options) {
        this.options = options;
        if (options.vcr) {
            this.compRef = options.vcr.createComponent(options.component, {
                index: options.vcr.length,
                injector: options.injector || options.vcr.injector,
            });
        }
        else {
            const factory = options.resolver.resolveComponentFactory(options.component);
            this.compRef = factory.create(options.injector);
            options.appRef.attachView(this.compRef.hostView);
        }
    }
    get ref() {
        return this.compRef;
    }
    setInput(input, value) {
        this.compRef.instance[input] = value;
        return this;
    }
    setInputs(inputs) {
        Object.keys(inputs).forEach((input) => {
            this.compRef.instance[input] = inputs[input];
        });
        return this;
    }
    detectChanges() {
        this.compRef.hostView.detectChanges();
        return this;
    }
    appendTo(container) {
        container.appendChild(this.getElement());
        return this;
    }
    removeFrom(container) {
        container.removeChild(this.getElement());
        return this;
    }
    getRawContent() {
        return this.getElement().outerHTML;
    }
    getElement() {
        return this.compRef.location.nativeElement;
    }
    destroy() {
        this.compRef.destroy();
        !this.options.vcr && this.options.appRef.detachView(this.compRef.hostView);
        this.compRef = null;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcC1yZWYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ25lYXQvb3ZlcnZpZXcvc3JjL2xpYi92aWV3cy9jb21wLXJlZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQkEsTUFBTSxPQUFPLE9BQU87SUFHbEIsWUFBb0IsT0FBbUI7UUFBbkIsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQUNyQyxJQUFJLE9BQU8sQ0FBQyxHQUFHLEVBQUU7WUFDZixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUU7Z0JBQzVELEtBQUssRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU07Z0JBQ3pCLFFBQVEsRUFBRSxPQUFPLENBQUMsUUFBUSxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUTthQUNuRCxDQUFDLENBQUM7U0FDSjthQUFNO1lBQ0wsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyx1QkFBdUIsQ0FBSSxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDL0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNoRCxPQUFPLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ2xEO0lBQ0gsQ0FBQztJQUVELElBQUksR0FBRztRQUNMLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBRUQsUUFBUSxDQUFzQyxLQUFRLEVBQUUsS0FBVztRQUNqRSxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsR0FBRyxLQUFLLENBQUM7UUFFckMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsU0FBUyxDQUFDLE1BQW9DO1FBQzVDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDcEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQy9DLENBQUMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsYUFBYTtRQUNYLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3RDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELFFBQVEsQ0FBQyxTQUFrQjtRQUN6QixTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO1FBRXpDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELFVBQVUsQ0FBQyxTQUFrQjtRQUMzQixTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxDQUFDO1FBRXpDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELGFBQWE7UUFDWCxPQUFPLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxTQUFTLENBQUM7SUFDckMsQ0FBQztJQUVELFVBQVU7UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQztJQUM3QyxDQUFDO0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDdkIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMzRSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztJQUN0QixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBcHBsaWNhdGlvblJlZixcbiAgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuICBDb21wb25lbnRSZWYsXG4gIEluamVjdG9yLFxuICBUeXBlLFxuICBWaWV3Q29udGFpbmVyUmVmLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEV4Y2x1ZGVGdW5jdGlvbnMsIFZpZXdSZWYgfSBmcm9tICcuL3R5cGVzJztcblxuaW50ZXJmYWNlIE9wdGlvbnM8Qz4ge1xuICBjb21wb25lbnQ6IFR5cGU8Qz47XG4gIGluamVjdG9yOiBJbmplY3RvcjtcbiAgcmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcjtcbiAgdmNyOiBWaWV3Q29udGFpbmVyUmVmIHwgdW5kZWZpbmVkO1xuICBhcHBSZWY6IEFwcGxpY2F0aW9uUmVmIHwgdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgY2xhc3MgQ29tcFJlZjxUPiBpbXBsZW1lbnRzIFZpZXdSZWYge1xuICBwcml2YXRlIGNvbXBSZWY6IENvbXBvbmVudFJlZjxUPjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG9wdGlvbnM6IE9wdGlvbnM8VD4pIHtcbiAgICBpZiAob3B0aW9ucy52Y3IpIHtcbiAgICAgIHRoaXMuY29tcFJlZiA9IG9wdGlvbnMudmNyLmNyZWF0ZUNvbXBvbmVudChvcHRpb25zLmNvbXBvbmVudCwge1xuICAgICAgICBpbmRleDogb3B0aW9ucy52Y3IubGVuZ3RoLFxuICAgICAgICBpbmplY3Rvcjogb3B0aW9ucy5pbmplY3RvciB8fCBvcHRpb25zLnZjci5pbmplY3RvcixcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBmYWN0b3J5ID0gb3B0aW9ucy5yZXNvbHZlci5yZXNvbHZlQ29tcG9uZW50RmFjdG9yeTxUPihvcHRpb25zLmNvbXBvbmVudCk7XG4gICAgICB0aGlzLmNvbXBSZWYgPSBmYWN0b3J5LmNyZWF0ZShvcHRpb25zLmluamVjdG9yKTtcbiAgICAgIG9wdGlvbnMuYXBwUmVmLmF0dGFjaFZpZXcodGhpcy5jb21wUmVmLmhvc3RWaWV3KTtcbiAgICB9XG4gIH1cblxuICBnZXQgcmVmKCkge1xuICAgIHJldHVybiB0aGlzLmNvbXBSZWY7XG4gIH1cblxuICBzZXRJbnB1dDxLIGV4dGVuZHMga2V5b2YgRXhjbHVkZUZ1bmN0aW9uczxUPj4oaW5wdXQ6IEssIHZhbHVlOiBUW0tdKSB7XG4gICAgdGhpcy5jb21wUmVmLmluc3RhbmNlW2lucHV0XSA9IHZhbHVlO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBzZXRJbnB1dHMoaW5wdXRzOiBQYXJ0aWFsPEV4Y2x1ZGVGdW5jdGlvbnM8VD4+KSB7XG4gICAgT2JqZWN0LmtleXMoaW5wdXRzKS5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgdGhpcy5jb21wUmVmLmluc3RhbmNlW2lucHV0XSA9IGlucHV0c1tpbnB1dF07XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGRldGVjdENoYW5nZXMoKSB7XG4gICAgdGhpcy5jb21wUmVmLmhvc3RWaWV3LmRldGVjdENoYW5nZXMoKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGFwcGVuZFRvKGNvbnRhaW5lcjogRWxlbWVudCkge1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLmdldEVsZW1lbnQoKSk7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHJlbW92ZUZyb20oY29udGFpbmVyOiBFbGVtZW50KSB7XG4gICAgY29udGFpbmVyLnJlbW92ZUNoaWxkKHRoaXMuZ2V0RWxlbWVudCgpKTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZ2V0UmF3Q29udGVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRFbGVtZW50KCkub3V0ZXJIVE1MO1xuICB9XG5cbiAgZ2V0RWxlbWVudDxUIGV4dGVuZHMgRWxlbWVudD4oKTogVCB7XG4gICAgcmV0dXJuIHRoaXMuY29tcFJlZi5sb2NhdGlvbi5uYXRpdmVFbGVtZW50O1xuICB9XG5cbiAgZGVzdHJveSgpIHtcbiAgICB0aGlzLmNvbXBSZWYuZGVzdHJveSgpO1xuICAgICF0aGlzLm9wdGlvbnMudmNyICYmIHRoaXMub3B0aW9ucy5hcHBSZWYuZGV0YWNoVmlldyh0aGlzLmNvbXBSZWYuaG9zdFZpZXcpO1xuICAgIHRoaXMuY29tcFJlZiA9IG51bGw7XG4gIH1cbn1cbiJdfQ==