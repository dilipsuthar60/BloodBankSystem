import { Injector, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';
import { Content } from '../views/types';
import { ViewService } from '../views/view';
import * as i0 from "@angular/core";
import * as i1 from "./dynamic-view.component";
export declare class DynamicViewDirective implements OnInit, OnChanges, OnDestroy {
    private defaultTpl;
    private vcr;
    private viewService;
    view: Content;
    injector: Injector;
    context: any;
    private viewRef;
    constructor(defaultTpl: TemplateRef<any>, vcr: ViewContainerRef, viewService: ViewService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    resolveContentType(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicViewDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<DynamicViewDirective, "[dynamicView]", never, { "view": "dynamicView"; "injector": "dynamicViewInjector"; "context": "dynamicViewContext"; }, {}, never>;
}
export declare class DynamicViewModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicViewModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DynamicViewModule, [typeof DynamicViewDirective, typeof i1.DynamicViewComponent], never, [typeof DynamicViewDirective]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DynamicViewModule>;
}
