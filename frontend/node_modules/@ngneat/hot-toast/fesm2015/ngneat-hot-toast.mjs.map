{"version":3,"file":"ngneat-hot-toast.mjs","sources":["../../../../projects/ngneat/hot-toast/src/lib/constants.ts","../../../../projects/ngneat/hot-toast/src/lib/hot-toast-ref.ts","../../../../projects/ngneat/hot-toast/src/lib/utils.ts","../../../../projects/ngneat/hot-toast/src/lib/components/animated-icon/animated-icon.component.ts","../../../../projects/ngneat/hot-toast/src/lib/components/animated-icon/animated-icon.component.html","../../../../projects/ngneat/hot-toast/src/lib/components/indicator/icons/checkmark/checkmark.component.ts","../../../../projects/ngneat/hot-toast/src/lib/components/indicator/icons/checkmark/checkmark.component.html","../../../../projects/ngneat/hot-toast/src/lib/components/indicator/icons/error/error.component.ts","../../../../projects/ngneat/hot-toast/src/lib/components/indicator/icons/error/error.component.html","../../../../projects/ngneat/hot-toast/src/lib/components/indicator/icons/loader/loader.component.ts","../../../../projects/ngneat/hot-toast/src/lib/components/indicator/icons/loader/loader.component.html","../../../../projects/ngneat/hot-toast/src/lib/components/indicator/icons/warning/warning.component.ts","../../../../projects/ngneat/hot-toast/src/lib/components/indicator/icons/warning/warning.component.html","../../../../projects/ngneat/hot-toast/src/lib/components/indicator/icons/info/info.component.ts","../../../../projects/ngneat/hot-toast/src/lib/components/indicator/icons/info/info.component.html","../../../../projects/ngneat/hot-toast/src/lib/components/indicator/indicator.component.ts","../../../../projects/ngneat/hot-toast/src/lib/components/indicator/indicator.component.html","../../../../projects/ngneat/hot-toast/src/lib/components/hot-toast/hot-toast.component.ts","../../../../projects/ngneat/hot-toast/src/lib/components/hot-toast/hot-toast.component.html","../../../../projects/ngneat/hot-toast/src/lib/components/hot-toast-container/hot-toast-container.component.ts","../../../../projects/ngneat/hot-toast/src/lib/components/hot-toast-container/hot-toast-container.component.html","../../../../projects/ngneat/hot-toast/src/lib/hot-toast.model.ts","../../../../projects/ngneat/hot-toast/src/lib/hot-toast.service.ts","../../../../projects/ngneat/hot-toast/src/lib/hot-toast.module.ts","../../../../projects/ngneat/hot-toast/src/public-api.ts","../../../../projects/ngneat/hot-toast/src/ngneat-hot-toast.ts"],"sourcesContent":["import { ToastType } from './hot-toast.model';\n\nexport const HOT_TOAST_DEFAULT_TIMEOUTS: {\n  [key in ToastType]: number;\n} = {\n  blank: 4000,\n  error: 4000,\n  success: 4000,\n  loading: 30000,\n  warning: 4000,\n  info: 4000,\n};\n\nexport const EXIT_ANIMATION_DURATION = 800;\nexport const ENTER_ANIMATION_DURATION = 350;\n\nexport const HOT_TOAST_MARGIN = 8;\n","import { Content } from '@ngneat/overview';\nimport { Observable, race, Subject } from 'rxjs';\n\n// This should be a `type` import since it causes `ng-packagr` compilation to fail because of a cyclic dependency.\nimport type { HotToastContainerComponent } from './components/hot-toast-container/hot-toast-container.component';\nimport { HotToastClose, Toast, UpdateToastOptions, HotToastRefProps, DefaultDataType } from './hot-toast.model';\n\nexport class HotToastRef<DataType = DefaultDataType> implements HotToastRefProps<DataType> {\n  updateMessage: (message: Content) => void;\n  updateToast: (options: UpdateToastOptions<DataType>) => void;\n  afterClosed: Observable<HotToastClose>;\n\n  private _dispose: () => void;\n\n  /** Subject for notifying the user that the toast has been closed. */\n  private _onClosed = new Subject<HotToastClose>();\n\n  constructor(private toast: Toast<DataType>) {}\n\n  get data() {\n    return this.toast.data;\n  }\n\n  set dispose(value: () => void) {\n    this._dispose = value;\n  }\n\n  getToast() {\n    return this.toast;\n  }\n\n  /**Used for internal purpose\n   * Attach ToastRef to container\n   */\n  appendTo(container: HotToastContainerComponent) {\n    const { dispose, updateMessage, updateToast, afterClosed } = container.addToast(this);\n\n    this.dispose = dispose;\n    this.updateMessage = updateMessage;\n    this.updateToast = updateToast;\n    this.afterClosed = race(this._onClosed.asObservable(), afterClosed);\n    return this;\n  }\n\n  /**\n   * Closes the toast\n   *\n   * @param [closeData={ dismissedByAction: false }] -\n   * Make sure to pass { dismissedByAction: true } when closing from template\n   * @memberof HotToastRef\n   */\n  close(closeData: { dismissedByAction: boolean } = { dismissedByAction: false }) {\n    this._dispose();\n    this._onClosed.next({ dismissedByAction: closeData.dismissedByAction, id: this.toast.id });\n    this._onClosed.complete();\n  }\n}\n","export const animate = (element: HTMLElement, value: string) => {\n  element.style.animation = value;\n};\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-animated-icon',\n  templateUrl: './animated-icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AnimatedIconComponent {\n  @Input() iconTheme: IconTheme;\n}\n","<div class=\"hot-toast-animated-icon\" [style.color]=\"iconTheme?.primary\">\n  <ng-content></ng-content>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-checkmark',\n  templateUrl: './checkmark.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckMarkComponent {\n  @Input() theme: IconTheme;\n}\n","<div\n  class=\"hot-toast-checkmark-icon\"\n  [style.--check-primary]=\"theme?.primary\"\n  [style.--check-secondary]=\"theme?.secondary\"\n></div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-error',\n  templateUrl: './error.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ErrorComponent {\n  @Input() theme: IconTheme;\n}\n","<div\n  class=\"hot-toast-error-icon\"\n  [style.--error-primary]=\"theme?.primary\"\n  [style.--error-secondary]=\"theme?.secondary\"\n></div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-loader',\n  templateUrl: './loader.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoaderComponent {\n  @Input() theme: IconTheme;\n}\n","<div\n  class=\"hot-toast-loader-icon\"\n  [ngStyle]=\"{ 'border-color': theme?.primary, 'border-right-color': theme?.secondary }\"\n></div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-warning',\n  templateUrl: './warning.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WarningComponent {\n  @Input() theme: IconTheme;\n}\n","<div\n  class=\"hot-toast-warning-icon\"\n  [style.--warn-primary]=\"theme?.primary\"\n  [style.--warn-secondary]=\"theme?.secondary\"\n></div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-info',\n  templateUrl: './info.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InfoComponent {\n  @Input() theme: IconTheme;\n}\n","<div\n  class=\"hot-toast-info-icon\"\n  [style.--warn-primary]=\"theme?.primary\"\n  [style.--warn-secondary]=\"theme?.secondary\"\n></div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme, ToastType } from '../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-indicator',\n  templateUrl: 'indicator.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IndicatorComponent {\n  @Input() theme: IconTheme;\n  @Input() type: ToastType;\n}\n","<div *ngIf=\"type !== 'blank'\" class=\"hot-toast-indicator-wrapper\">\n  <hot-toast-loader [theme]=\"theme\"></hot-toast-loader>\n  <div *ngIf=\"type !== 'loading'\" class=\"hot-toast-status-wrapper\">\n    <div [ngSwitch]=\"type\">\n      <div *ngSwitchCase=\"'error'\">\n        <hot-toast-error [theme]=\"theme\"></hot-toast-error>\n      </div>\n      <div *ngSwitchCase=\"'success'\">\n        <hot-toast-checkmark [theme]=\"theme\"></hot-toast-checkmark>\n      </div>\n      <div *ngSwitchCase=\"'warning'\">\n        <hot-toast-warning [theme]=\"theme\"></hot-toast-warning>\n      </div>\n      <div *ngSwitchCase=\"'info'\">\n        <hot-toast-info [theme]=\"theme\"></hot-toast-info>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { isComponent, isTemplateRef } from '@ngneat/overview';\n\nimport { ENTER_ANIMATION_DURATION, EXIT_ANIMATION_DURATION } from '../../constants';\nimport { HotToastRef } from '../../hot-toast-ref';\nimport { CreateHotToastRef, HotToastClose, Toast, ToastConfig } from '../../hot-toast.model';\nimport { animate } from '../../utils';\n\n@Component({\n  selector: 'hot-toast',\n  templateUrl: 'hot-toast.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HotToastComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() toast: Toast<unknown>;\n  @Input() offset = 0;\n  @Input() defaultConfig: ToastConfig;\n  @Input() toastRef: CreateHotToastRef<unknown>;\n\n  @Output() height = new EventEmitter<number>();\n  @Output() beforeClosed = new EventEmitter();\n  @Output() afterClosed = new EventEmitter<HotToastClose>();\n\n  @ViewChild('hotToastBarBase') private toastBarBase: ElementRef<HTMLElement>;\n\n  isManualClose = false;\n  context: Record<string, any>;\n  toastComponentInjector: Injector;\n\n  private unlisteners: VoidFunction[] = [];\n\n  constructor(private injector: Injector, private renderer: Renderer2, private ngZone: NgZone) {}\n\n  get containerPositionStyle() {\n    const top = this.toast.position.includes('top');\n    const verticalStyle = top ? { top: 0 } : { bottom: 0 };\n\n    const horizontalStyle = this.toast.position.includes('left')\n      ? {\n          left: 0,\n        }\n      : this.toast.position.includes('right')\n      ? {\n          right: 0,\n        }\n      : {\n          left: 0,\n          right: 0,\n          justifyContent: 'center',\n        };\n    return {\n      transform: `translateY(${this.offset * (top ? 1 : -1)}px)`,\n      ...verticalStyle,\n      ...horizontalStyle,\n    };\n  }\n\n  get toastBarBaseStyles() {\n    const top = this.toast.position.includes('top');\n\n    const enterAnimation = `hotToastEnterAnimation${\n      top ? 'Negative' : 'Positive'\n    } ${ENTER_ANIMATION_DURATION}ms cubic-bezier(0.21, 1.02, 0.73, 1) forwards`;\n\n    const exitAnimation = `hotToastExitAnimation${\n      top ? 'Negative' : 'Positive'\n    } ${EXIT_ANIMATION_DURATION}ms forwards cubic-bezier(0.06, 0.71, 0.55, 1) ${this.toast.duration}ms`;\n\n    const animation = this.toast.autoClose ? `${enterAnimation}, ${exitAnimation}` : enterAnimation;\n\n    return { ...this.toast.style, animation };\n  }\n\n  get isIconString() {\n    return typeof this.toast.icon === 'string';\n  }\n\n  ngOnInit() {\n    if (isTemplateRef(this.toast.message)) {\n      this.context = { $implicit: this.toastRef };\n    }\n    if (isComponent(this.toast.message)) {\n      this.toastComponentInjector = Injector.create({\n        providers: [\n          {\n            provide: HotToastRef,\n            useValue: this.toastRef,\n          },\n        ],\n        parent: this.toast.injector || this.injector,\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    const nativeElement = this.toastBarBase.nativeElement;\n    // Caretaker note: accessing `offsetHeight` triggers the whole layout update.\n    // Macro tasks (like `setTimeout`) might be executed within the current rendering frame and cause a frame drop.\n    requestAnimationFrame(() => {\n      this.height.emit(nativeElement.offsetHeight);\n    });\n\n    // Caretaker note: `animationstart` and `animationend` events are event tasks that trigger change detection.\n    // We'd want to trigger the change detection only if it's an exit animation.\n    this.ngZone.runOutsideAngular(() => {\n      this.unlisteners.push(\n        // Caretaker note: we have to remove these event listeners at the end (even if the element is removed from DOM).\n        // zone.js stores its `ZoneTask`s within the `nativeElement[Zone.__symbol__('animationstart') + 'false']` property\n        // with callback that capture `this`.\n        this.renderer.listen(nativeElement, 'animationstart', (event: AnimationEvent) => {\n          if (this.isExitAnimation(event)) {\n            this.ngZone.run(() => this.beforeClosed.emit());\n          }\n        }),\n        this.renderer.listen(nativeElement, 'animationend', (event: AnimationEvent) => {\n          if (this.isExitAnimation(event)) {\n            this.ngZone.run(() => this.afterClosed.emit({ dismissedByAction: this.isManualClose, id: this.toast.id }));\n          }\n        })\n      );\n    });\n\n    this.setToastAttributes();\n  }\n\n  close() {\n    this.isManualClose = true;\n    const top = this.toast.position.includes('top');\n\n    const exitAnimation = `hotToastExitAnimation${\n      top ? 'Negative' : 'Positive'\n    } ${EXIT_ANIMATION_DURATION}ms forwards cubic-bezier(0.06, 0.71, 0.55, 1)`;\n\n    const nativeElement = this.toastBarBase.nativeElement;\n\n    animate(nativeElement, exitAnimation);\n  }\n\n  ngOnDestroy() {\n    this.close();\n    while (this.unlisteners.length) {\n      this.unlisteners.pop()();\n    }\n  }\n\n  private isExitAnimation(ev: AnimationEvent) {\n    return ev.animationName.includes('hotToastExitAnimation');\n  }\n\n  private setToastAttributes() {\n    const toastAttributes: Record<string, string> = this.toast.attributes;\n    for (const [key, value] of Object.entries(toastAttributes)) {\n      this.renderer.setAttribute(this.toastBarBase.nativeElement, key, value);\n    }\n  }\n}\n","<div\n  class=\"hot-toast-bar-base-container\"\n  [ngStyle]=\"containerPositionStyle\"\n  [ngClass]=\"'hot-toast-theme-' + toast.theme\"\n>\n  <div\n    class=\"hot-toast-bar-base\"\n    #hotToastBarBase\n    [ngStyle]=\"toastBarBaseStyles\"\n    [ngClass]=\"toast.className\"\n    [style.--hot-toast-animation-state]=\"isManualClose ? 'running' : 'paused'\"\n    [attr.aria-live]=\"toast.ariaLive\"\n    [attr.role]=\"toast.role\"\n  >\n    <div class=\"hot-toast-icon\" aria-hidden=\"true\">\n      <ng-container *ngIf=\"toast.icon !== undefined; else indicator\">\n        <ng-container *ngIf=\"isIconString; else iconTemplateOrComponent\">\n          <hot-toast-animated-icon [iconTheme]=\"toast.iconTheme\">{{ toast.icon }}</hot-toast-animated-icon>\n        </ng-container>\n        <ng-template #iconTemplateOrComponent>\n          <div>\n            <ng-container [dynamicView]=\"toast.icon\"></ng-container>\n          </div>\n        </ng-template>\n      </ng-container>\n\n      <ng-template #indicator>\n        <hot-toast-indicator [theme]=\"toast.iconTheme\" [type]=\"toast.type\"></hot-toast-indicator>\n      </ng-template>\n    </div>\n\n    <div class=\"hot-toast-message\">\n      <div>\n        <ng-container *dynamicView=\"toast.message; context: context; injector: toastComponentInjector\"></ng-container>\n      </div>\n    </div>\n\n    <button\n      *ngIf=\"toast.dismissible\"\n      (click)=\"close()\"\n      type=\"button\"\n      class=\"hot-toast-close-btn\"\n      aria-label=\"Close\"\n      [ngStyle]=\"toast.closeStyle\"\n    ></button>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Input, QueryList, ViewChildren } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {\n  HotToastClose,\n  Toast,\n  ToastConfig,\n  ToastPosition,\n  UpdateToastOptions,\n  AddToastRef,\n  CreateHotToastRef,\n} from '../../hot-toast.model';\nimport { HotToastRef } from '../../hot-toast-ref';\nimport { filter } from 'rxjs/operators';\nimport { Content } from '@ngneat/overview';\nimport { HotToastComponent } from '../hot-toast/hot-toast.component';\nimport { HOT_TOAST_MARGIN } from '../../constants';\n\n@Component({\n  selector: 'hot-toast-container',\n  templateUrl: './hot-toast-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HotToastContainerComponent {\n  @Input() defaultConfig: ToastConfig;\n\n  @ViewChildren(HotToastComponent) hotToastComponentList: QueryList<HotToastComponent>;\n\n  toasts: Toast<unknown>[] = [];\n  toastRefs: CreateHotToastRef<unknown>[] = [];\n\n  /** Subject for notifying the user that the toast has been closed. */\n  private _onClosed = new Subject<HotToastClose>();\n\n  private onClosed$ = this._onClosed.asObservable();\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  trackById(index: number, toast: Toast<unknown>) {\n    return toast.id;\n  }\n\n  calculateOffset(toastId: string, position: ToastPosition) {\n    const visibleToasts = this.toasts.filter((t) => t.visible && t.position === position);\n    const index = visibleToasts.findIndex((toast) => toast.id === toastId);\n    const offset =\n      index !== -1\n        ? visibleToasts\n            .slice(...(this.defaultConfig.reverseOrder ? [index + 1] : [0, index]))\n            .reduce((acc, t) => acc + (t.height || 0) + HOT_TOAST_MARGIN, 0)\n        : 0;\n    return offset;\n  }\n\n  updateHeight(height: number, toast: Toast<unknown>) {\n    toast.height = height;\n    this.cdr.detectChanges();\n  }\n\n  addToast<DataType>(ref: HotToastRef): AddToastRef<DataType> {\n    this.toastRefs.push(ref);\n\n    const toast = ref.getToast();\n\n    this.toasts.push(ref.getToast());\n\n    this.cdr.detectChanges();\n\n    return {\n      dispose: () => {\n        this.closeToast(toast.id);\n      },\n      updateMessage: (message: Content) => {\n        toast.message = message;\n        this.cdr.detectChanges();\n      },\n      updateToast: (options: UpdateToastOptions<DataType>) => {\n        this.updateToasts(toast, options);\n        this.cdr.detectChanges();\n      },\n      afterClosed: this.getAfterClosed(toast),\n    };\n  }\n\n  closeToast(id?: string) {\n    if (id) {\n      const comp = this.hotToastComponentList.find((item) => item.toast.id === id);\n      if (comp) {\n        comp.close();\n      }\n    } else {\n      this.hotToastComponentList.forEach((comp) => comp.close());\n    }\n  }\n\n  beforeClosed(toast: Toast<unknown>) {\n    toast.visible = false;\n  }\n\n  afterClosed(closeToast: HotToastClose) {\n    const toastIndex = this.toasts.findIndex((t) => t.id === closeToast.id);\n    if (toastIndex > -1) {\n      this._onClosed.next(closeToast);\n      this.toasts = this.toasts.filter((t) => t.id !== closeToast.id);\n      this.toastRefs = this.toastRefs.filter((t) => t.getToast().id !== closeToast.id);\n      this.cdr.detectChanges();\n    }\n  }\n\n  hasToast(id: string) {\n    return this.toasts.findIndex((t) => t.id === id) > -1;\n  }\n\n  private getAfterClosed(toast: Toast<unknown>) {\n    return this.onClosed$.pipe(filter((v) => v.id === toast.id));\n  }\n\n  private updateToasts(toast: Toast<unknown>, options?: UpdateToastOptions<unknown>) {\n    this.toasts = this.toasts.map((t) => ({ ...t, ...(t.id === toast.id && { ...toast, ...options }) }));\n  }\n}\n","<div style=\"position: fixed; z-index: 9999; top: 0; right: 0; bottom: 0; left: 0; pointer-events: none\">\n  <div style=\"position: relative; height: 100%\">\n    <hot-toast\n      *ngFor=\"let toast of toasts; trackBy: trackById; let i = index\"\n      [toast]=\"toast\"\n      [offset]=\"calculateOffset(toast.id, toast.position)\"\n      [toastRef]=\"toastRefs[i]\"\n      (height)=\"updateHeight($event, toast)\"\n      (beforeClosed)=\"beforeClosed(toast)\"\n      (afterClosed)=\"afterClosed($event)\"\n    ></hot-toast>\n  </div>\n</div>\n","import { Injector } from '@angular/core';\nimport { Content } from '@ngneat/overview';\nimport { Observable } from 'rxjs';\n\nexport class ToastConfig implements DefaultToastOptions {\n  /**\n   * Sets the reverse order for hot-toast stacking\n   *\n   * @default false\n   */\n  reverseOrder = false;\n\n  ariaLive: ToastAriaLive = 'polite';\n  role: ToastRole = 'status';\n  position: ToastPosition = 'top-center';\n  className: string;\n  closeStyle: any;\n  dismissible: boolean;\n  autoClose = true;\n  duration: number;\n  icon: Content;\n  iconTheme: IconTheme;\n  style: any;\n  theme: ToastTheme = 'toast';\n  attributes: Record<string, string> = {};\n\n  // key in ToastType\n  info: ToastOptions<unknown> & { content?: Content } = { content: '' };\n  success: ToastOptions<unknown> & { content?: Content } = { content: '' };\n  error: ToastOptions<unknown> & { content?: Content } = { content: '' };\n  loading: ToastOptions<unknown> & { content?: Content } = { content: '' };\n  blank: ToastOptions<unknown> & { content?: Content } = { content: '' };\n  warning: ToastOptions<unknown> & { content?: Content } = { content: '' };\n}\n\nexport type ToastType = 'success' | 'error' | 'loading' | 'blank' | 'warning' | 'info';\nexport type ToastPosition = 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\n\nexport type IconTheme = {\n  primary: string;\n  secondary?: string;\n};\n\nexport type ToastTheme = 'toast' | 'snackbar';\n\nexport type ValueFunction<TValue, TArg> = (arg: TArg) => TValue;\nexport type ValueOrFunction<TValue, TArg> = TValue | ValueFunction<TValue, TArg>;\n\nconst isFunction = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>\n): valOrFunction is ValueFunction<TValue, TArg> => typeof valOrFunction === 'function';\n\nexport const resolveValueOrFunction = <TValue, TArg>(valOrFunction: ValueOrFunction<TValue, TArg>, arg: TArg): TValue =>\n  isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction;\n\nexport type ToastRole = 'status' | 'alert';\n\nexport type ToastAriaLive = 'assertive' | 'off' | 'polite';\n\nexport interface Toast<DataType> {\n  type: ToastType;\n\n  /**\n   * Unique id to associate with hot-toast.\n   * There can't be multiple hot-toasts opened with same id.\n   *\n   * @default Date.now().toString()\n   */\n  id: string;\n\n  /** The message to show in the hot-toast. */\n  message: Content;\n\n  /**\n   * Role of the live region.\n   *\n   * @default status\n   */\n  role: ToastRole;\n\n  /** aria-live value for the live region.\n   *\n   * @default polite\n   */\n  ariaLive: ToastAriaLive;\n\n  /**Icon to show in the hot-toast */\n  icon?: Content;\n\n  /**\n   * Duration in milliseconds after which hot-toast will be auto closed.\n   * Can be disabled via `autoClose: false`\n   *\n   * @default 3000 | error = 4000 | loading = 30000\n   */\n  duration?: number;\n\n  /**\n   * Show close button in hot-toast\n   *\n   * @default false\n   */\n  dismissible?: boolean;\n\n  /**\n   * Auto close hot-toast after duration\n   *\n   * @default true\n   */\n  autoClose?: boolean;\n\n  /**Extra styles to apply for hot-toast */\n  style?: any;\n\n  /**Extra CSS classes to be added to the hot toast container. */\n  className?: string;\n\n  /**Extra attribute to be added to the hot toast container. */\n  attributes?: Record<string, string>;\n\n  /**Use this to change icon color */\n  iconTheme?: IconTheme;\n\n  /**\n   * Visual appearance of hot-toast\n   *\n   * @default toast\n   */\n  theme?: ToastTheme;\n\n  /**\n   * The position to place the hot-toast.\n   *\n   *  @default top-center\n   */\n  position?: ToastPosition;\n\n  /**Extra styles to apply for close button */\n  closeStyle?: any;\n\n  createdAt: number;\n  visible: boolean;\n  height?: number;\n\n  observableMessages?: ObservableMessages<unknown, DataType>;\n\n  /**\n   * Useful when you want to keep a persistance for toast based on ids, across sessions.\n   *\n   * @example\n   * // Lets say you want show hot-toast, with a particular id,\n   * // max 3 times to a user irrespective of browser session.\n   * // In this case you will set this as:\n   * { enabled: true, count: 3 }\n   *\n   * @type {ToastPersistConfig}\n   */\n  persist?: ToastPersistConfig;\n\n  /**\n   * Allows you to pass injector for your component\n   *\n   * @since 1.1.0\n   * @type {Injector}\n   * @memberof Toast\n   */\n  injector?: Injector;\n\n  /**\n   * Allows you to pass data for your component/template\n   *\n   * @since 2.0.0\n   * @type {DataType}\n   * @memberof Toast\n   */\n  data?: DataType;\n}\n\nexport type ToastOptions<DataType> = Partial<\n  Pick<\n    Toast<DataType>,\n    | 'id'\n    | 'icon'\n    | 'duration'\n    | 'dismissible'\n    | 'autoClose'\n    | 'role'\n    | 'ariaLive'\n    | 'className'\n    | 'style'\n    | 'iconTheme'\n    | 'theme'\n    | 'position'\n    | 'closeStyle'\n    | 'persist'\n    | 'injector'\n    | 'data'\n    | 'attributes'\n  >\n>;\n\nexport type DefaultToastOptions = ToastOptions<unknown> & {\n  [key in ToastType]?: ToastOptions<unknown> & { content?: Content };\n};\n\nexport type ObservableLoading<DataType> = {\n  content: Content;\n} & ToastOptions<DataType>;\n\nexport type ObservableSuccessOrError<T, DataType> = {\n  content: ValueOrFunction<Content, T>;\n} & ToastOptions<DataType>;\n\nexport type ObservableMessages<T, DataType> = {\n  loading?: Content | ObservableLoading<DataType>;\n  success?: ValueOrFunction<Content, T> | ObservableSuccessOrError<T, DataType>;\n  error?: ValueOrFunction<Content, any> | ObservableSuccessOrError<any, DataType>;\n};\n\nexport interface HotToastServiceMethods {\n  show<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown>;\n  error<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown>;\n  success<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown>;\n  loading<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown>;\n  warning<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown>;\n  observe<T, DataType>(messages: ObservableMessages<T, DataType>): (source: Observable<T>) => Observable<T>;\n  close(id?: string): void;\n}\n\nexport type UpdateToastOptions<DataType> = Partial<\n  Pick<\n    Toast<DataType>,\n    'icon' | 'duration' | 'dismissible' | 'className' | 'style' | 'iconTheme' | 'type' | 'theme' | 'closeStyle'\n  >\n>;\n\nexport interface HotToastRefProps<DataType> {\n  /** Returns all the toast options */\n  getToast: () => Toast<DataType>;\n  dispose: () => void;\n  /**Updates only message */\n  updateMessage: (message: Content) => void;\n  /**Update updatable options of toast */\n  updateToast: (options: UpdateToastOptions<DataType>) => void;\n  /** Observable for notifying the user that the toast has been closed. */\n  afterClosed: Observable<HotToastClose>;\n  /**Closes the toast */\n  close: (closeData?: { dismissedByAction: boolean }) => void;\n  /**\n   * @since 2.0.0\n   */\n  readonly data: DataType;\n}\n\n/** Event that is emitted when a snack bar is dismissed. */\nexport interface HotToastClose {\n  /** Whether the snack bar was dismissed using the action button. */\n  dismissedByAction: boolean;\n  id: string;\n}\n\nexport class ToastPersistConfig {\n  /**\n   *In which storage id vs. counts should be stored\n   *\n   * @type {('local' | 'session')}\n   * @memberof ToastPersistConfig\n   * @default 'local'\n   */\n  storage?: 'local' | 'session' = 'local';\n\n  /**\n   *The key pattern to store object in storage. `${id}` in pattern is replaced with actual toast id.\n   *\n   * @type {('local' | 'session')}\n   * @memberof ToastPersistConfig\n   * @default 'ngneat/hottoast-${id}'\n   */\n  key?: string = 'ngneat/hototast-${id}';\n\n  /**\n   *The number of toasts allowed to show.\n   *\n   * @memberof ToastPersistConfig\n   * @default 1\n   */\n  count? = 1;\n\n  enabled = false;\n}\n\nexport type AddToastRef<DataType> = Pick<\n  HotToastRefProps<DataType>,\n  'afterClosed' | 'dispose' | 'updateMessage' | 'updateToast'\n>;\n\nexport type CreateHotToastRef<DataType> = Omit<Omit<HotToastRefProps<DataType>, 'appendTo'>, 'dispose'>;\n\nexport type DefaultDataType = Record<string, any>;\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, Optional, PLATFORM_ID } from '@angular/core';\nimport { CompRef, Content, isComponent, isTemplateRef, ViewService } from '@ngneat/overview';\nimport { defer, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { HotToastContainerComponent } from './components/hot-toast-container/hot-toast-container.component';\nimport { HOT_TOAST_DEFAULT_TIMEOUTS } from './constants';\nimport { HotToastRef } from './hot-toast-ref';\nimport {\n  CreateHotToastRef,\n  DefaultToastOptions,\n  HotToastServiceMethods,\n  ObservableLoading,\n  ObservableMessages,\n  ObservableSuccessOrError,\n  resolveValueOrFunction,\n  Toast,\n  ToastConfig,\n  ToastOptions,\n  ToastPersistConfig,\n  ToastType,\n  UpdateToastOptions,\n  ValueOrFunction,\n} from './hot-toast.model';\n\n@Injectable({ providedIn: 'root' })\nexport class HotToastService implements HotToastServiceMethods {\n  private _isInitialized = false;\n  private _componentRef: CompRef<HotToastContainerComponent>;\n\n  private _defaultConfig = new ToastConfig();\n  private _defaultPersistConfig = new ToastPersistConfig();\n\n  constructor(\n    private _viewService: ViewService,\n    @Inject(PLATFORM_ID) private platformId: string,\n    @Optional() config: ToastConfig\n  ) {\n    if (config) {\n      this._defaultConfig = {\n        ...this._defaultConfig,\n        ...config,\n      };\n    }\n  }\n\n  get defaultConfig() {\n    return this._defaultConfig;\n  }\n  set defaultConfig(config: ToastConfig) {\n    this._defaultConfig = {\n      ...this._defaultConfig,\n      ...config,\n    };\n    if (this._componentRef) {\n      this._componentRef.setInput('defaultConfig', this._defaultConfig);\n    }\n  }\n\n  /**\n   * Opens up an hot-toast without any pre-configurations\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  show<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown> {\n    const toast = this.createToast<DataType>(message || this._defaultConfig.blank.content, 'blank', {\n      ...this._defaultConfig,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for error state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  error<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown> {\n    const toast = this.createToast<DataType>(message || this._defaultConfig.error.content, 'error', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.error,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for success state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  success<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown> {\n    const toast = this.createToast<DataType>(message || this._defaultConfig.success.content, 'success', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.success,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for loading state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  loading<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown> {\n    const toast = this.createToast<DataType>(message || this._defaultConfig.loading.content, 'loading', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.loading,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for warning state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  warning<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown> {\n    const toast = this.createToast<DataType>(message || this._defaultConfig.warning.content, 'warning', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.warning,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for info state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   * @since 3.3.0\n   */\n  info<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown> {\n    const toast = this.createToast<DataType>(message || this._defaultConfig.info.content, 'info', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.info,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   *\n   *  Opens up an hot-toast with pre-configurations for loading initially and then changes state based on messages\n   *\n   * @template T Type of observable\n   * @param messages Messages for each state i.e. loading, success and error\n   * @returns\n   * @memberof HotToastService\n   */\n  observe<T, DataType>(messages: ObservableMessages<T, DataType>): (source: Observable<T>) => Observable<T> {\n    return (source) => {\n      let toastRef: CreateHotToastRef<DataType | unknown>;\n      let start = 0;\n\n      const loadingContent = messages.loading ?? this._defaultConfig.loading?.content;\n      const successContent = messages.success ?? this._defaultConfig.success?.content;\n      const errorContent = messages.error ?? this._defaultConfig.error?.content;\n\n      return defer(() => {\n        if (loadingContent) {\n          toastRef = this.createLoadingToast<T, DataType>(loadingContent);\n          start = Date.now();\n        }\n        return source.pipe(\n          tap({\n            ...(successContent && {\n              next: (val) => {\n                toastRef = this.createOrUpdateToast<T, DataType | unknown>(\n                  messages,\n                  val,\n                  toastRef,\n                  'success',\n                  start === 0 ? start : Date.now() - start\n                );\n              },\n            }),\n            ...(errorContent && {\n              error: (e) => {\n                toastRef = this.createOrUpdateToast<T, DataType | unknown>(\n                  messages,\n                  e,\n                  toastRef,\n                  'error',\n                  start === 0 ? start : Date.now() - start\n                );\n              },\n            }),\n          })\n        );\n      });\n    };\n  }\n\n  /**\n   * Closes the hot-toast\n   *\n   * @param [id] - ID of the toast\n   * @since 3.0.1 - If ID is not provided, all toasts will be closed\n   */\n  close(id?: string) {\n    if (this._componentRef) {\n      this._componentRef.ref.instance.closeToast(id);\n    }\n  }\n\n  /**\n   * Used for internal purpose only.\n   * Creates a container component and attaches it to document.body.\n   */\n  private init() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    this._componentRef = this._viewService\n      .createComponent(HotToastContainerComponent)\n      .setInput('defaultConfig', this._defaultConfig)\n      .appendTo(document.body);\n  }\n\n  private createOrUpdateToast<T, DataType>(\n    messages: ObservableMessages<T, DataType>,\n    val: unknown,\n    toastRef: CreateHotToastRef<DataType>,\n    type: ToastType,\n    diff: number\n  ) {\n    let content: Content | ValueOrFunction<Content, T> = null;\n    let options: ToastOptions<DataType | unknown> = {};\n    ({ content, options } = this.getContentAndOptions<any, DataType>(\n      type,\n      messages[type] || (this._defaultConfig[type] ? this._defaultConfig[type].content : '')\n    ));\n    content = resolveValueOrFunction(content, val);\n    if (toastRef) {\n      toastRef.updateMessage(content);\n      const updatedOptions: UpdateToastOptions<DataType> = {\n        type,\n        duration: diff + HOT_TOAST_DEFAULT_TIMEOUTS[type],\n        ...options,\n        ...(options.duration && { duration: diff + options.duration }),\n      };\n      toastRef.updateToast(updatedOptions);\n    } else {\n      this.createToast<DataType, T>(content, type, options);\n    }\n    return toastRef;\n  }\n\n  private createToast<DataType, T = unknown>(\n    message: Content,\n    type: ToastType,\n    options?: DefaultToastOptions,\n    observableMessages?: ObservableMessages<T, DataType>\n  ): CreateHotToastRef<DataType | unknown> {\n    if (!this._isInitialized) {\n      this._isInitialized = true;\n      this.init();\n    }\n\n    const now = Date.now();\n    const id = options?.id ?? now.toString();\n\n    if (\n      !this.isDuplicate(id) &&\n      (!options.persist?.enabled || (options.persist?.enabled && this.handleStorageValue(id, options)))\n    ) {\n      const toast: Toast<DataType | unknown> = {\n        ariaLive: options?.ariaLive ?? 'polite',\n        createdAt: now,\n        duration: options?.duration ?? HOT_TOAST_DEFAULT_TIMEOUTS[type],\n        id,\n        message,\n        role: options?.role ?? 'status',\n        type,\n        visible: true,\n        observableMessages: observableMessages ?? undefined,\n        ...options,\n      };\n\n      return new HotToastRef<DataType | unknown>(toast).appendTo(this._componentRef.ref.instance);\n    }\n  }\n\n  /**\n   * Checks whether any toast with same id is present.\n   *\n   * @private\n   * @param id - Toast ID\n   */\n  private isDuplicate(id: string) {\n    return this._componentRef.ref.instance.hasToast(id);\n  }\n\n  /**\n   * Creates an entry in local or session storage with count ${defaultConfig.persist.count}, if not present.\n   * If present in storage, reduces the count\n   * and returns the count.\n   * Count can not be less than 0.\n   */\n  private handleStorageValue(id: string, options: DefaultToastOptions): number {\n    let count = 1;\n    const persist = { ...this._defaultPersistConfig, ...options.persist };\n    const storage: Storage = persist.storage === 'local' ? localStorage : sessionStorage;\n    const key = persist.key.replace(/\\${id}/g, id);\n\n    let item: string | number = storage.getItem(key);\n\n    if (item) {\n      item = parseInt(item, 10);\n      if (item > 0) {\n        count = item - 1;\n      } else {\n        count = item;\n      }\n    } else {\n      count = persist.count;\n    }\n\n    storage.setItem(key, count.toString());\n\n    return count;\n  }\n\n  private getContentAndOptions<T, DataType>(\n    toastType: ToastType,\n    message: Content | ValueOrFunction<Content, T> | ObservableLoading<DataType> | ObservableSuccessOrError<T, DataType>\n  ): { options: ToastOptions<DataType | unknown>; content: Content | ValueOrFunction<Content, T> } {\n    let content: Content | ValueOrFunction<Content, T>;\n    let options: ToastOptions<DataType | unknown> = {\n      ...this._defaultConfig,\n      ...this._defaultConfig[toastType],\n    };\n\n    // typeof message === 'object' won't work, cz TemplateRef's type is object\n    if (typeof message === 'string' || isTemplateRef(message) || isComponent(message)) {\n      content = message;\n    } else {\n      let restOptions: ToastOptions<DataType>;\n      ({ content, ...restOptions } = message as ObservableLoading<DataType> | ObservableSuccessOrError<T, DataType>);\n      options = { ...options, ...restOptions };\n    }\n\n    return { content, options };\n  }\n\n  private createLoadingToast<T, DataType>(messages: Content | ObservableLoading<DataType>) {\n    let content: Content | ValueOrFunction<Content, T> = null;\n    let options: ToastOptions<DataType | unknown> = {};\n\n    ({ content, options } = this.getContentAndOptions<any, DataType>('loading', messages));\n\n    return this.loading(content as Content, options);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { DynamicViewModule } from '@ngneat/overview';\n\nimport { AnimatedIconComponent } from './components/animated-icon/animated-icon.component';\nimport { HotToastComponent } from './components/hot-toast/hot-toast.component';\nimport { CheckMarkComponent } from './components/indicator/icons/checkmark/checkmark.component';\nimport { ErrorComponent } from './components/indicator/icons/error/error.component';\nimport { LoaderComponent } from './components/indicator/icons/loader/loader.component';\nimport { IndicatorComponent } from './components/indicator/indicator.component';\nimport { ToastConfig } from './hot-toast.model';\nimport { HotToastContainerComponent } from './components/hot-toast-container/hot-toast-container.component';\nimport { WarningComponent } from './components/indicator/icons/warning/warning.component';\nimport { InfoComponent } from './components/indicator/icons/info/info.component';\n\n@NgModule({\n  declarations: [\n    HotToastContainerComponent,\n    HotToastComponent,\n    AnimatedIconComponent,\n    IndicatorComponent,\n    CheckMarkComponent,\n    ErrorComponent,\n    LoaderComponent,\n    WarningComponent,\n    InfoComponent,\n  ],\n  imports: [CommonModule, DynamicViewModule],\n})\nexport class HotToastModule {\n  static forRoot(config?: Partial<ToastConfig>): ModuleWithProviders<HotToastModule> {\n    return {\n      ngModule: HotToastModule,\n      providers: [{ provide: ToastConfig, useValue: config }],\n    };\n  }\n}\n","/*\n * Public API Surface of hot-toast\n */\n\nexport * from './lib/hot-toast.service';\nexport * from './lib/hot-toast.module';\nexport * from './lib/hot-toast.model';\nexport * from './lib/hot-toast-ref';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.CheckMarkComponent","i3.ErrorComponent","i4.LoaderComponent","i5.WarningComponent","i6.InfoComponent","i2","i3.AnimatedIconComponent","i4.IndicatorComponent","i2.HotToastComponent","i2.ToastConfig"],"mappings":";;;;;;;;;;AAEO,MAAM,0BAA0B,GAEnC;AACF,IAAA,KAAK,EAAE,IAAI;AACX,IAAA,KAAK,EAAE,IAAI;AACX,IAAA,OAAO,EAAE,IAAI;AACb,IAAA,OAAO,EAAE,KAAK;AACd,IAAA,OAAO,EAAE,IAAI;AACb,IAAA,IAAI,EAAE,IAAI;CACX,CAAC;AAEK,MAAM,uBAAuB,GAAG,GAAG,CAAC;AACpC,MAAM,wBAAwB,GAAG,GAAG,CAAC;AAErC,MAAM,gBAAgB,GAAG,CAAC;;MCTpB,WAAW,CAAA;AAUtB,IAAA,WAAA,CAAoB,KAAsB,EAAA;AAAtB,QAAA,IAAK,CAAA,KAAA,GAAL,KAAK,CAAiB;;AAFlC,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,OAAO,EAAiB,CAAC;KAEH;AAE9C,IAAA,IAAI,IAAI,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;KACxB;IAED,IAAI,OAAO,CAAC,KAAiB,EAAA;AAC3B,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IAED,QAAQ,GAAA;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AAED;;AAEG;AACH,IAAA,QAAQ,CAAC,SAAqC,EAAA;AAC5C,QAAA,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAEtF,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;AACnC,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;AAC/B,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,EAAE,WAAW,CAAC,CAAC;AACpE,QAAA,OAAO,IAAI,CAAC;KACb;AAED;;;;;;AAMG;AACH,IAAA,KAAK,CAAC,SAA4C,GAAA,EAAE,iBAAiB,EAAE,KAAK,EAAE,EAAA;QAC5E,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,iBAAiB,EAAE,SAAS,CAAC,iBAAiB,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;AAC3F,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAC3B;AACF;;ACxDM,MAAM,OAAO,GAAG,CAAC,OAAoB,EAAE,KAAa,KAAI;AAC7D,IAAA,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;AAClC,CAAC;;MCMY,qBAAqB,CAAA;;kHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,qBAAqB,mGCRlC,qHAGA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FDKa,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;+BACE,yBAAyB,EAAA,eAAA,EAElB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,qHAAA,EAAA,CAAA;8BAGtC,SAAS,EAAA,CAAA;sBAAjB,KAAK;;;MEDK,kBAAkB,CAAA;;+GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,uFCR/B,uJAKA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FDGa,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;+BACE,qBAAqB,EAAA,eAAA,EAEd,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,uJAAA,EAAA,CAAA;8BAGtC,KAAK,EAAA,CAAA;sBAAb,KAAK;;;MEDK,cAAc,CAAA;;2GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,cAAc,mFCR3B,mJAKA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FDGa,cAAc,EAAA,UAAA,EAAA,CAAA;kBAL1B,SAAS;+BACE,iBAAiB,EAAA,eAAA,EAEV,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,mJAAA,EAAA,CAAA;8BAGtC,KAAK,EAAA,CAAA;sBAAb,KAAK;;;MEDK,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,eAAe,oFCR5B,gJAIA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FDIa,eAAe,EAAA,UAAA,EAAA,CAAA;kBAL3B,SAAS;+BACE,kBAAkB,EAAA,eAAA,EAEX,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,gJAAA,EAAA,CAAA;8BAGtC,KAAK,EAAA,CAAA;sBAAb,KAAK;;;MEDK,gBAAgB,CAAA;;6GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,qFCR7B,mJAKA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FDGa,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,SAAS;+BACE,mBAAmB,EAAA,eAAA,EAEZ,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,mJAAA,EAAA,CAAA;8BAGtC,KAAK,EAAA,CAAA;sBAAb,KAAK;;;MEDK,aAAa,CAAA;;0GAAb,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,aAAa,kFCR1B,gJAKA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FDGa,aAAa,EAAA,UAAA,EAAA,CAAA;kBALzB,SAAS;+BACE,gBAAgB,EAAA,eAAA,EAET,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,gJAAA,EAAA,CAAA;8BAGtC,KAAK,EAAA,CAAA;sBAAb,KAAK;;;MEDK,kBAAkB,CAAA;;+GAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,qGCR/B,wuBAmBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,kBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,cAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,eAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,gBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,aAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FDXa,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;+BACE,qBAAqB,EAAA,eAAA,EAEd,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,wuBAAA,EAAA,CAAA;8BAGtC,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;;;MEiBK,iBAAiB,CAAA;AAkB5B,IAAA,WAAA,CAAoB,QAAkB,EAAU,QAAmB,EAAU,MAAc,EAAA;AAAvE,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;AAAU,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;AAAU,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AAhBlF,QAAA,IAAM,CAAA,MAAA,GAAG,CAAC,CAAC;AAIV,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,YAAY,EAAU,CAAC;AACpC,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;AAClC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,YAAY,EAAiB,CAAC;AAI1D,QAAA,IAAa,CAAA,aAAA,GAAG,KAAK,CAAC;AAId,QAAA,IAAW,CAAA,WAAA,GAAmB,EAAE,CAAC;KAEsD;AAE/F,IAAA,IAAI,sBAAsB,GAAA;AACxB,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAChD,QAAA,MAAM,aAAa,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;QAEvD,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;AAC1D,cAAE;AACE,gBAAA,IAAI,EAAE,CAAC;AACR,aAAA;cACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC;AACvC,kBAAE;AACE,oBAAA,KAAK,EAAE,CAAC;AACT,iBAAA;AACH,kBAAE;AACE,oBAAA,IAAI,EAAE,CAAC;AACP,oBAAA,KAAK,EAAE,CAAC;AACR,oBAAA,cAAc,EAAE,QAAQ;iBACzB,CAAC;QACN,OACE,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,SAAS,EAAE,CAAA,WAAA,EAAc,IAAI,CAAC,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EACvD,EAAA,aAAa,CACb,EAAA,eAAe,CAClB,CAAA;KACH;AAED,IAAA,IAAI,kBAAkB,GAAA;AACpB,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAEhD,QAAA,MAAM,cAAc,GAAG,CACrB,sBAAA,EAAA,GAAG,GAAG,UAAU,GAAG,UACrB,CAAI,CAAA,EAAA,wBAAwB,+CAA+C,CAAC;QAE5E,MAAM,aAAa,GAAG,CACpB,qBAAA,EAAA,GAAG,GAAG,UAAU,GAAG,UACrB,CAAA,CAAA,EAAI,uBAAuB,CAAiD,8CAAA,EAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAA,EAAA,CAAI,CAAC;AAEpG,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAG,EAAA,cAAc,KAAK,aAAa,CAAA,CAAE,GAAG,cAAc,CAAC;AAEhG,QAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAY,IAAI,CAAC,KAAK,CAAC,KAAK,CAAA,EAAA,EAAE,SAAS,EAAG,CAAA,CAAA;KAC3C;AAED,IAAA,IAAI,YAAY,GAAA;QACd,OAAO,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC;KAC5C;IAED,QAAQ,GAAA;QACN,IAAI,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;YACrC,IAAI,CAAC,OAAO,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC7C,SAAA;QACD,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;AACnC,YAAA,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC,MAAM,CAAC;AAC5C,gBAAA,SAAS,EAAE;AACT,oBAAA;AACE,wBAAA,OAAO,EAAE,WAAW;wBACpB,QAAQ,EAAE,IAAI,CAAC,QAAQ;AACxB,qBAAA;AACF,iBAAA;gBACD,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ;AAC7C,aAAA,CAAC,CAAC;AACJ,SAAA;KACF;IAED,eAAe,GAAA;AACb,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;;;QAGtD,qBAAqB,CAAC,MAAK;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;AAC/C,SAAC,CAAC,CAAC;;;AAIH,QAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAK;YACjC,IAAI,CAAC,WAAW,CAAC,IAAI;;;;AAInB,YAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,gBAAgB,EAAE,CAAC,KAAqB,KAAI;AAC9E,gBAAA,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;AAC/B,oBAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC;AACjD,iBAAA;AACH,aAAC,CAAC,EACF,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAa,EAAE,cAAc,EAAE,CAAC,KAAqB,KAAI;AAC5E,gBAAA,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;AAC/B,oBAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,iBAAiB,EAAE,IAAI,CAAC,aAAa,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAC5G,iBAAA;aACF,CAAC,CACH,CAAC;AACJ,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;AAC1B,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAEhD,QAAA,MAAM,aAAa,GAAG,CACpB,qBAAA,EAAA,GAAG,GAAG,UAAU,GAAG,UACrB,CAAI,CAAA,EAAA,uBAAuB,+CAA+C,CAAC;AAE3E,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;AAEtD,QAAA,OAAO,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;KACvC;IAED,WAAW,GAAA;QACT,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;AAC9B,YAAA,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,CAAC;AAC1B,SAAA;KACF;AAEO,IAAA,eAAe,CAAC,EAAkB,EAAA;QACxC,OAAO,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;KAC3D;IAEO,kBAAkB,GAAA;AACxB,QAAA,MAAM,eAAe,GAA2B,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;AACtE,QAAA,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;AAC1D,YAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AACzE,SAAA;KACF;;8GA7IU,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,iBAAiB,+VC3B9B,2jDA+CA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,qBAAA,EAAA,oBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,qBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,MAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FDpBa,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,SAAS;+BACE,WAAW,EAAA,eAAA,EAEJ,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,2jDAAA,EAAA,CAAA;4IAGtC,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAEI,MAAM,EAAA,CAAA;sBAAf,MAAM;gBACG,YAAY,EAAA,CAAA;sBAArB,MAAM;gBACG,WAAW,EAAA,CAAA;sBAApB,MAAM;gBAE+B,YAAY,EAAA,CAAA;sBAAjD,SAAS;uBAAC,iBAAiB,CAAA;;;MEdjB,0BAA0B,CAAA;AAarC,IAAA,WAAA,CAAoB,GAAsB,EAAA;AAAtB,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAmB;AAR1C,QAAA,IAAM,CAAA,MAAA,GAAqB,EAAE,CAAC;AAC9B,QAAA,IAAS,CAAA,SAAA,GAAiC,EAAE,CAAC;;AAGrC,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,OAAO,EAAiB,CAAC;QAEzC,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;KAEJ;IAE9C,SAAS,CAAC,KAAa,EAAE,KAAqB,EAAA;QAC5C,OAAO,KAAK,CAAC,EAAE,CAAC;KACjB;IAED,eAAe,CAAC,OAAe,EAAE,QAAuB,EAAA;QACtD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;AACtF,QAAA,MAAM,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;AACvE,QAAA,MAAM,MAAM,GACV,KAAK,KAAK,CAAC,CAAC;AACV,cAAE,aAAa;iBACV,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;iBACtE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,gBAAgB,EAAE,CAAC,CAAC;cAClE,CAAC,CAAC;AACR,QAAA,OAAO,MAAM,CAAC;KACf;IAED,YAAY,CAAC,MAAc,EAAE,KAAqB,EAAA;AAChD,QAAA,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AACtB,QAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;KAC1B;AAED,IAAA,QAAQ,CAAW,GAAgB,EAAA;AACjC,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAEzB,QAAA,MAAM,KAAK,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAE7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;AAEjC,QAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAEzB,OAAO;YACL,OAAO,EAAE,MAAK;AACZ,gBAAA,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC3B;AACD,YAAA,aAAa,EAAE,CAAC,OAAgB,KAAI;AAClC,gBAAA,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;AACxB,gBAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;AACD,YAAA,WAAW,EAAE,CAAC,OAAqC,KAAI;AACrD,gBAAA,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AAClC,gBAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;aAC1B;AACD,YAAA,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;SACxC,CAAC;KACH;AAED,IAAA,UAAU,CAAC,EAAW,EAAA;AACpB,QAAA,IAAI,EAAE,EAAE;YACN,MAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AAC7E,YAAA,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,KAAK,EAAE,CAAC;AACd,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;AAC5D,SAAA;KACF;AAED,IAAA,YAAY,CAAC,KAAqB,EAAA;AAChC,QAAA,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;KACvB;AAED,IAAA,WAAW,CAAC,UAAyB,EAAA;QACnC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,CAAC,CAAC;AACxE,QAAA,IAAI,UAAU,GAAG,CAAC,CAAC,EAAE;AACnB,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,CAAC,CAAC;YAChE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,CAAC,CAAC;AACjF,YAAA,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;AAC1B,SAAA;KACF;AAED,IAAA,QAAQ,CAAC,EAAU,EAAA;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;KACvD;AAEO,IAAA,cAAc,CAAC,KAAqB,EAAA;QAC1C,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;KAC9D;IAEO,YAAY,CAAC,KAAqB,EAAE,OAAqC,EAAA;AAC/E,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAW,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAC,CAAK,GAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,IAAS,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,GAAK,OAAO,CAAE,EAAC,CAAG,CAAC,CAAC;KACtG;;uHAhGU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;2GAA1B,0BAA0B,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,uBAAA,EAAA,SAAA,EAGvB,iBAAiB,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EC1BjC,qiBAaA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,cAAA,EAAA,aAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FDUa,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;+BACE,qBAAqB,EAAA,eAAA,EAEd,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,qiBAAA,EAAA,CAAA;wGAGtC,aAAa,EAAA,CAAA;sBAArB,KAAK;gBAE2B,qBAAqB,EAAA,CAAA;sBAArD,YAAY;uBAAC,iBAAiB,CAAA;;;MEtBpB,WAAW,CAAA;AAAxB,IAAA,WAAA,GAAA;AACE;;;;AAIG;AACH,QAAA,IAAY,CAAA,YAAA,GAAG,KAAK,CAAC;AAErB,QAAA,IAAQ,CAAA,QAAA,GAAkB,QAAQ,CAAC;AACnC,QAAA,IAAI,CAAA,IAAA,GAAc,QAAQ,CAAC;AAC3B,QAAA,IAAQ,CAAA,QAAA,GAAkB,YAAY,CAAC;AAIvC,QAAA,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;AAKjB,QAAA,IAAK,CAAA,KAAA,GAAe,OAAO,CAAC;AAC5B,QAAA,IAAU,CAAA,UAAA,GAA2B,EAAE,CAAC;;QAGxC,IAAA,CAAA,IAAI,GAAkD,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QACtE,IAAA,CAAA,OAAO,GAAkD,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QACzE,IAAA,CAAA,KAAK,GAAkD,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QACvE,IAAA,CAAA,OAAO,GAAkD,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QACzE,IAAA,CAAA,KAAK,GAAkD,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QACvE,IAAA,CAAA,OAAO,GAAkD,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;KAC1E;AAAA,CAAA;AAeD,MAAM,UAAU,GAAG,CACjB,aAA4C,KACK,OAAO,aAAa,KAAK,UAAU,CAAC;AAE1E,MAAA,sBAAsB,GAAG,CAAe,aAA4C,EAAE,GAAS,KAC1G,UAAU,CAAC,aAAa,CAAC,GAAG,aAAa,CAAC,GAAG,CAAC,GAAG,cAAc;MAgNpD,kBAAkB,CAAA;AAA/B,IAAA,WAAA,GAAA;AACE;;;;;;AAMG;AACH,QAAA,IAAO,CAAA,OAAA,GAAyB,OAAO,CAAC;AAExC;;;;;;AAMG;AACH,QAAA,IAAG,CAAA,GAAA,GAAY,uBAAuB,CAAC;AAEvC;;;;;AAKG;AACH,QAAA,IAAK,CAAA,KAAA,GAAI,CAAC,CAAC;AAEX,QAAA,IAAO,CAAA,OAAA,GAAG,KAAK,CAAC;KACjB;AAAA;;MCtQY,eAAe,CAAA;AAO1B,IAAA,WAAA,CACU,YAAyB,EACJ,UAAkB,EACnC,MAAmB,EAAA;AAFvB,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAa;AACJ,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAQ;AARzC,QAAA,IAAc,CAAA,cAAA,GAAG,KAAK,CAAC;AAGvB,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,WAAW,EAAE,CAAC;AACnC,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAI,kBAAkB,EAAE,CAAC;AAOvD,QAAA,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,cAAc,GACd,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,cAAc,CAAA,EACnB,MAAM,CACV,CAAC;AACH,SAAA;KACF;AAED,IAAA,IAAI,aAAa,GAAA;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IACD,IAAI,aAAa,CAAC,MAAmB,EAAA;QACnC,IAAI,CAAC,cAAc,GACd,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,cAAc,CAAA,EACnB,MAAM,CACV,CAAC;QACF,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;AACnE,SAAA;KACF;AAED;;;;;;;AAOG;IACH,IAAI,CAAW,OAAiB,EAAE,OAAgC,EAAA;QAChE,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAW,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EACzF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,cAAc,CAAA,EACnB,OAAO,CAAA,CACV,CAAC;AAEH,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;;;;;AAOG;IACH,KAAK,CAAW,OAAiB,EAAE,OAAgC,EAAA;;AACjE,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAW,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EACzF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,cAAc,GACnB,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAC1B,EAAA,OAAO,EACV,CAAC;AAEH,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;;;;;AAOG;IACH,OAAO,CAAW,OAAiB,EAAE,OAAgC,EAAA;;AACnE,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAW,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,EAC7F,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,cAAc,GACnB,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CAC5B,EAAA,OAAO,EACV,CAAC;AAEH,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;;;;;AAOG;IACH,OAAO,CAAW,OAAiB,EAAE,OAAgC,EAAA;;AACnE,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAW,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,EAC7F,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,cAAc,GACnB,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CAC5B,EAAA,OAAO,EACV,CAAC;AAEH,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;;;;;AAOG;IACH,OAAO,CAAW,OAAiB,EAAE,OAAgC,EAAA;;AACnE,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAW,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,EAC7F,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,cAAc,GACnB,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CAC5B,EAAA,OAAO,EACV,CAAC;AAEH,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;;;;;;AAQG;IACH,IAAI,CAAW,OAAiB,EAAE,OAAgC,EAAA;;AAChE,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAW,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EACvF,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,cAAc,GACnB,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,CACzB,EAAA,OAAO,EACV,CAAC;AAEH,QAAA,OAAO,KAAK,CAAC;KACd;AAED;;;;;;;;AAQG;AACH,IAAA,OAAO,CAAc,QAAyC,EAAA;QAC5D,OAAO,CAAC,MAAM,KAAI;;AAChB,YAAA,IAAI,QAA+C,CAAC;YACpD,IAAI,KAAK,GAAG,CAAC,CAAC;AAEd,YAAA,MAAM,cAAc,GAAG,CAAA,EAAA,GAAA,QAAQ,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC;AAChF,YAAA,MAAM,cAAc,GAAG,CAAA,EAAA,GAAA,QAAQ,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC;AAChF,YAAA,MAAM,YAAY,GAAG,CAAA,EAAA,GAAA,QAAQ,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC;YAE1E,OAAO,KAAK,CAAC,MAAK;AAChB,gBAAA,IAAI,cAAc,EAAE;AAClB,oBAAA,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAc,cAAc,CAAC,CAAC;AAChE,oBAAA,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACpB,iBAAA;gBACD,OAAO,MAAM,CAAC,IAAI,CAChB,GAAG,CACE,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,GAAC,cAAc,IAAI;AACpB,oBAAA,IAAI,EAAE,CAAC,GAAG,KAAI;AACZ,wBAAA,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CACjC,QAAQ,EACR,GAAG,EACH,QAAQ,EACR,SAAS,EACT,KAAK,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CACzC,CAAC;qBACH;iBACF,EAAC,GACE,YAAY,IAAI;AAClB,oBAAA,KAAK,EAAE,CAAC,CAAC,KAAI;AACX,wBAAA,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CACjC,QAAQ,EACR,CAAC,EACD,QAAQ,EACR,OAAO,EACP,KAAK,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CACzC,CAAC;qBACH;iBACF,EAAC,CACF,CACH,CAAC;AACJ,aAAC,CAAC,CAAC;AACL,SAAC,CAAC;KACH;AAED;;;;;AAKG;AACH,IAAA,KAAK,CAAC,EAAW,EAAA;QACf,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;AAChD,SAAA;KACF;AAED;;;AAGG;IACK,IAAI,GAAA;AACV,QAAA,IAAI,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACrC,OAAO;AACR,SAAA;AACD,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY;aACnC,eAAe,CAAC,0BAA0B,CAAC;AAC3C,aAAA,QAAQ,CAAC,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC;AAC9C,aAAA,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC5B;IAEO,mBAAmB,CACzB,QAAyC,EACzC,GAAY,EACZ,QAAqC,EACrC,IAAe,EACf,IAAY,EAAA;QAEZ,IAAI,OAAO,GAA0C,IAAI,CAAC;QAC1D,IAAI,OAAO,GAAqC,EAAE,CAAC;AACnD,QAAA,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,oBAAoB,CAC/C,IAAI,EACJ,QAAQ,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC,CACvF,EAAE;AACH,QAAA,OAAO,GAAG,sBAAsB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AAC/C,QAAA,IAAI,QAAQ,EAAE;AACZ,YAAA,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAChC,YAAA,MAAM,cAAc,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAClB,IAAI,EACJ,QAAQ,EAAE,IAAI,GAAG,0BAA0B,CAAC,IAAI,CAAC,IAC9C,OAAO,CAAA,GACN,OAAO,CAAC,QAAQ,IAAI,EAAE,QAAQ,EAAE,IAAI,GAAG,OAAO,CAAC,QAAQ,EAAE,EAC9D,CAAC;AACF,YAAA,QAAQ,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;AACtC,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,WAAW,CAAc,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACvD,SAAA;AACD,QAAA,OAAO,QAAQ,CAAC;KACjB;AAEO,IAAA,WAAW,CACjB,OAAgB,EAChB,IAAe,EACf,OAA6B,EAC7B,kBAAoD,EAAA;;AAEpD,QAAA,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;AACxB,YAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,IAAI,EAAE,CAAC;AACb,SAAA;AAED,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACvB,QAAA,MAAM,EAAE,GAAG,CAAA,EAAA,GAAA,OAAO,aAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,EAAE,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,GAAG,CAAC,QAAQ,EAAE,CAAC;AAEzC,QAAA,IACE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC;AACrB,aAAC,EAAC,CAAA,EAAA,GAAA,OAAO,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,CAAA,KAAK,CAAA,CAAA,EAAA,GAAA,OAAO,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,KAAI,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,EACjG;AACA,YAAA,MAAM,KAAK,GAAA,MAAA,CAAA,MAAA,CAAA,EACT,QAAQ,EAAE,MAAA,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,QAAQ,EACvC,SAAS,EAAE,GAAG,EACd,QAAQ,EAAE,CAAA,EAAA,GAAA,OAAO,KAAA,IAAA,IAAP,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,QAAQ,mCAAI,0BAA0B,CAAC,IAAI,CAAC,EAC/D,EAAE;AACF,gBAAA,OAAO,EACP,IAAI,EAAE,CAAA,EAAA,GAAA,OAAO,KAAP,IAAA,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,IAAI,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,QAAQ,EAC/B,IAAI,EACJ,OAAO,EAAE,IAAI,EACb,kBAAkB,EAAE,kBAAkB,KAAlB,IAAA,IAAA,kBAAkB,KAAlB,KAAA,CAAA,GAAA,kBAAkB,GAAI,SAAS,EAChD,EAAA,OAAO,CACX,CAAC;AAEF,YAAA,OAAO,IAAI,WAAW,CAAqB,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC7F,SAAA;KACF;AAED;;;;;AAKG;AACK,IAAA,WAAW,CAAC,EAAU,EAAA;AAC5B,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;KACrD;AAED;;;;;AAKG;IACK,kBAAkB,CAAC,EAAU,EAAE,OAA4B,EAAA;QACjE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,OAAO,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAI,CAAC,qBAAqB,GAAK,OAAO,CAAC,OAAO,CAAE,CAAC;AACtE,QAAA,MAAM,OAAO,GAAY,OAAO,CAAC,OAAO,KAAK,OAAO,GAAG,YAAY,GAAG,cAAc,CAAC;AACrF,QAAA,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAE/C,IAAI,IAAI,GAAoB,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAEjD,QAAA,IAAI,IAAI,EAAE;AACR,YAAA,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC1B,IAAI,IAAI,GAAG,CAAC,EAAE;AACZ,gBAAA,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC;AAClB,aAAA;AAAM,iBAAA;gBACL,KAAK,GAAG,IAAI,CAAC;AACd,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AACvB,SAAA;QAED,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;AAEvC,QAAA,OAAO,KAAK,CAAC;KACd;IAEO,oBAAoB,CAC1B,SAAoB,EACpB,OAAoH,EAAA;AAEpH,QAAA,IAAI,OAA8C,CAAC;AACnD,QAAA,IAAI,OAAO,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACN,IAAI,CAAC,cAAc,CAAA,EACnB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAClC,CAAC;;AAGF,QAAA,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC,EAAE;YACjF,OAAO,GAAG,OAAO,CAAC;AACnB,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,WAAmC,CAAC;AACxC,YAAA,EAAC,EAAE,OAAO,EAAqB,GAAA,QAA8E,EAA9F,WAAW,GAAK,MAAA,CAAA,OAA8E,EAA5G,CAAA,SAAA,CAA2B,CAAF,EAAqF;AAC/G,YAAA,OAAO,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAO,CAAK,EAAA,WAAW,CAAE,CAAC;AAC1C,SAAA;AAED,QAAA,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;KAC7B;AAEO,IAAA,kBAAkB,CAAc,QAA+C,EAAA;QACrF,IAAI,OAAO,GAA0C,IAAI,CAAC;QAC1D,IAAI,OAAO,GAAqC,EAAE,CAAC;AAEnD,QAAA,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,oBAAoB,CAAgB,SAAS,EAAE,QAAQ,CAAC,EAAE;QAEvF,OAAO,IAAI,CAAC,OAAO,CAAC,OAAkB,EAAE,OAAO,CAAC,CAAC;KAClD;;AAjWU,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,+CAShB,WAAW,EAAA,EAAA,EAAA,KAAA,EAAAC,WAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AATV,eAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,cADF,MAAM,EAAA,CAAA,CAAA;2FACnB,eAAe,EAAA,UAAA,EAAA,CAAA;kBAD3B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;8BAU7B,MAAM;+BAAC,WAAW,CAAA;;8BAClB,QAAQ;;;;MCRA,cAAc,CAAA;IACzB,OAAO,OAAO,CAAC,MAA6B,EAAA;QAC1C,OAAO;AACL,YAAA,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;SACxD,CAAC;KACH;;2GANU,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,iBAZvB,0BAA0B;QAC1B,iBAAiB;QACjB,qBAAqB;QACrB,kBAAkB;QAClB,kBAAkB;QAClB,cAAc;QACd,eAAe;QACf,gBAAgB;QAChB,aAAa,CAAA,EAAA,OAAA,EAAA,CAEL,YAAY,EAAE,iBAAiB,CAAA,EAAA,CAAA,CAAA;4GAE9B,cAAc,EAAA,OAAA,EAAA,CAFf,YAAY,EAAE,iBAAiB,CAAA,EAAA,CAAA,CAAA;2FAE9B,cAAc,EAAA,UAAA,EAAA,CAAA;kBAd1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,0BAA0B;wBAC1B,iBAAiB;wBACjB,qBAAqB;wBACrB,kBAAkB;wBAClB,kBAAkB;wBAClB,cAAc;wBACd,eAAe;wBACf,gBAAgB;wBAChB,aAAa;AACd,qBAAA;AACD,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,iBAAiB,CAAC;iBAC3C,CAAA;;;AC5BD;;AAEG;;ACFH;;AAEG;;;;"}