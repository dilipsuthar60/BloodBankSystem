export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vbGliL3NyYy9zdG9yYWdlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0b3JhZ2VEZWNvZGVyLCBTdG9yYWdlRW5jb2RlciwgU3RvcmFnZVRyYW5zY29kZXIgfSBmcm9tICcuL3N0b3JhZ2UtdHJhbnNjb2Rlcic7XG5cbi8qKlxuICogSW50ZXJmYWNlIGZvciBvYmplY3RzIHRoYXQgY2FuIGJlIHVzZWQgdG8gc3RvcmUgZGF0YS4gVGhlIHNlcnZpY2UgaXMgZXhwZWN0ZWQgdG8gc3RvcmUgYW55IGtpbmQgb2YgZGF0YSB0aGF0IGNhbiBiZSBlbmNvZGVkIGFzIGEgc3RyaW5nLlxuICpcbiAqIFRoZSBgU3RvcmFnZVNlcnZpY2VgIGludGVyZmFjZSBpcyBwYXJhbWV0ZXJpemVkIG9uIGBUYCB3aGljaCByZXByZXNlbnRzIHRoZSB0eXBlIG9mIG9iamVjdHMgd2hpY2ggY2FuIGJlIHJlYWQgYW5kIHdyaXR0ZW4uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZVNlcnZpY2U8VCA9IGFueT4ge1xuXG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgYW4gZW50cnkgd2l0aCB0aGUgc3BlY2lmaWVkIGtleSBleGlzdHMgaW4gdGhlIHN0b3JhZ2UuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gICBrZXkgSWRlbnRpZmllciBvZiB0aGUgZW50cnkgZm9yIHdoaWNoIGl0cyBwcmVzZW5jZSBpbiB0aGUgc3RvcmFnZSBpcyB0byBiZSBjaGVja2VkLlxuICAgICAqIEByZXR1cm5zICAgICBgdHJ1ZWAgaWYgYW4gZW50cnkgd2l0aCB0aGUgc3BlY2lmaWVkIGtleSBleGlzdHMgaW4gdGhlIHN0b3JhZ2UsIGBmYWxzZWAgaWYgbm90LlxuICAgICAqL1xuICAgIGhhcyhrZXk6IHN0cmluZyk6IGJvb2xlYW47XG5cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIHZhbHVlIHN0b3JlZCBmb3IgdGhlIGVudHJ5IHRoYXQgaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBzcGVjaWZpZWQga2V5LiBJZiBubyBzdWNoIGVudHJ5IGV4aXN0cyBvciBpZiB0aGUgc2VydmljZSBmb3JcbiAgICAgKiBzb21lIHJlYXNvbiBpcyB1bmFibGUgdG8gZmV0Y2ggdGhlIHZhbHVlIG9mIHRoZSBlbnRyeSB0aGVuIGB1bmRlZmluZWRgIHdpbGwgYmUgcmV0dXJuZWQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gICBrZXkgSWRlbnRpZmllciBvZiB0aGUgZW50cnkgd2hvc2UgdmFsdWUgaXMgdG8gYmUgcmV0cmlldmVkLlxuICAgICAqIEByZXR1cm5zICAgICBWYWx1ZSBvZiB0aGUgZW50cnkgdGhhdCBpcyBpZGVudGlmaWVkIGJ5IHRoZSBzcGVjaWZpZWQga2V5LiBJbiBjYXNlIHRoZSBlbnRyeSBkb2VzIG5vdCBleGlzdCBvciBpZiBpdCBjYW5ub3QgYmUgbG9hZGVkXG4gICAgICogICAgICAgICAgICAgIChkdWUgdG8gYSBkZWNvZGluZyBpc3N1ZSksIHRoZW4gYHVuZGVmaW5lZGAgd2lsbCBiZSByZXR1cm5lZCBieSB0aGlzIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIGdldChrZXk6IHN0cmluZyk6IFQgfCB1bmRlZmluZWQ7XG5cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIHZhbHVlIHN0b3JlZCBmb3IgdGhlIGVudHJ5IHRoYXQgaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBzcGVjaWZpZWQga2V5LiBUaGUgZ2l2ZW4gZGVjb2RlciBpcyB1c2VkIHRvIGNvbnZlcnQgdGhlIHN0b3JlZFxuICAgICAqIHZhbHVlIHRvIHRoZSBkZXNpcmVkIHR5cGUuIElmIG5vIGVudHJ5IGZvciB0aGUgc3BlY2lmaWVkIGtleSBleGlzdHMgb3IgaWYgdGhlIGRlY29kZXIgaXMgdW5hYmxlIHRvIGRlY29kZSB0aGUgc3RvcmVkIHZhbHVlLCB0aGVuXG4gICAgICogYHVuZGVmaW5lZGAgd2lsbCBiZSByZXR1cm5lZC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSAgIGtleSAgICAgSWRlbnRpZmllciBvZiB0aGUgZW50cnkgd2hvc2UgdmFsdWUgaXMgdG8gYmUgcmV0cmlldmVkLlxuICAgICAqIEBwYXJhbSAgIGRlY29kZXIgRGVjb2RlciB0byB1c2UgZm9yIGNvbnZlcnRpbmcgdGhlIHN0b3JlZCB2YWx1ZSB0byB0aGUgZGVzaXJlZCByZXR1cm4gdHlwZS5cbiAgICAgKiBAcmV0dXJucyAgICAgICAgIFZhbHVlIG9mIHRoZSBlbnRyeSB0aGF0IGlzIGlkZW50aWZpZWQgYnkgdGhlIHNwZWNpZmllZCBrZXkuIEluIGNhc2UgdGhlIGVudHJ5IGRvZXMgbm90IGV4aXN0IG9yIGlmIGl0IGNhbm5vdCBiZVxuICAgICAqICAgICAgICAgICAgICAgICAgbG9hZGVkIChkdWUgdG8gYSBkZWNvZGluZyBpc3N1ZSksIHRoZW4gYHVuZGVmaW5lZGAgd2lsbCBiZSByZXR1cm5lZCBieSB0aGlzIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIGdldDxYPihrZXk6IHN0cmluZywgZGVjb2RlcjogU3RvcmFnZURlY29kZXI8WD4pOiBYIHwgdW5kZWZpbmVkO1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBvciB1cGRhdGVzIHRoZSBlbnRyeSBpZGVudGlmaWVkIGJ5IHRoZSBzcGVjaWZpZWQga2V5IHdpdGggdGhlIGdpdmVuIHZhbHVlLiBTdG9yaW5nIGEgdmFsdWUgaW50byB0aGUgc3RvcmFnZSBzZXJ2aWNlIHdpbGxcbiAgICAgKiBlbnN1cmUgdGhhdCBhbiBlcXVpdmFsZW50IG9mIHRoZSB2YWx1ZSBjYW4gYmUgcmVhZCBiYWNrLCBpLmUuIHRoZSBkYXRhIGFuZCBzdHJ1Y3R1cmUgb2YgdGhlIHZhbHVlIHdpbGwgYmUgdGhlIHNhbWUuIEl0LCBob3dldmVyLCBkb2VzXG4gICAgICogbm90IG5lY2Vzc2FyaWx5IHJldHVybiB0aGUgc2FtZSByZWZlcmVuY2UuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ga2V5ICAgSWRlbnRpZmllciBvZiB0aGUgZW50cnkgd2hpY2ggaXMgdG8gYmUgY3JlYXRlZCBvciB1cGRhdGVkLlxuICAgICAqIEBwYXJhbSB2YWx1ZSBWYWx1ZSB3aGljaCBpcyB0byBiZSBzdG9yZWQuXG4gICAgICovXG4gICAgc2V0KGtleTogc3RyaW5nLCB2YWx1ZTogVCk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIG9yIHVwZGF0ZXMgdGhlIGVudHJ5IGlkZW50aWZpZWQgYnkgdGhlIHNwZWNpZmllZCBrZXkgd2l0aCB0aGUgZ2l2ZW4gdmFsdWUuIFRoZSBzcGVjaWZpZWQgZW5jb2RlciBpcyB1c2VkIHRvIGNvbnZlcnQgdGhlIGdpdmVuXG4gICAgICogdmFsdWUgaW50byBhIGZvcm1hdCB0aGF0IGNhbiBiZSBzdG9yZWQgYnkgdGhlIHN0b3JhZ2Ugc2VydmljZSdzIHVuZGVybHlpbmcgc3RvcmFnZS5cbiAgICAgKlxuICAgICAqIFN0b3JpbmcgYSB2YWx1ZSBpbnRvIHRoZSBzdG9yYWdlIHNlcnZpY2Ugd2lsbCBlbnN1cmUgdGhhdCBhbiBlcXVpdmFsZW50IG9mIHRoZSB2YWx1ZSBjYW4gYmUgcmVhZCBiYWNrLCBpLmUuIHRoZSBkYXRhIGFuZCBzdHJ1Y3R1cmUgb2ZcbiAgICAgKiB0aGUgdmFsdWUgd2lsbCBiZSB0aGUgc2FtZS4gSXQsIGhvd2V2ZXIsIGRvZXMgbm90IG5lY2Vzc2FyaWx5IHJldHVybiB0aGUgc2FtZSByZWZlcmVuY2UuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ga2V5ICAgICBJZGVudGlmaWVyIG9mIHRoZSBlbnRyeSB3aGljaCBpcyB0byBiZSBjcmVhdGVkIG9yIHVwZGF0ZWQuXG4gICAgICogQHBhcmFtIHZhbHVlICAgVmFsdWUgd2hpY2ggaXMgdG8gYmUgc3RvcmVkLlxuICAgICAqIEBwYXJhbSBlbmNvZGVyIEVuY29kZXIgdXNlZCB0byBjb252ZXJ0IHRoZSBnaXZlbiB2YWx1ZSBpbnRvIGEgZm9ybWF0IHRoYXQgY2FuIGJlIHVzZWQgZm9yIHN0b3JhZ2UuXG4gICAgICovXG4gICAgc2V0PFg+KGtleTogc3RyaW5nLCB2YWx1ZTogWCwgZW5jb2RlcjogU3RvcmFnZUVuY29kZXI8WD4pOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyB0aGUgZW50cnkgdGhhdCBpcyBpZGVudGlmaWVkIGJ5IHRoZSBzcGVjaWZpZWQga2V5LiBBdHRlbXB0aW5nIHRvIHJlbW92ZSBhbiBlbnRyeSBmb3IgYW4gdW5rbm93biBrZXkgd2lsbCBoYXZlIG5vIGVmZmVjdC5cbiAgICAgKiBBdHRlbXB0aW5nIHRvIHJldHJpZXZlIGFuIGVudHJ5IHZpYSB0aGUgYGdldGAgbWV0aG9kIGFmdGVyIGl0IGhhcyBiZWVuIHJlbW92ZWQgd2lsbCByZXN1bHQgaW4gYHVuZGVmaW5lZGAuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ga2V5IElkZW50aWZpZXIgb2YgdGhlIGVudHJ5IHdoaWNoIGlzIHRvIGJlIHJlbW92ZWQuXG4gICAgICovXG4gICAgcmVtb3ZlKGtleTogc3RyaW5nKTogdm9pZDtcblxuICAgIC8qKlxuICAgICAqIENsZWFycyB0aGUgc3RvcmFnZSBieSByZW1vdmluZyBhbGwgZW50cmllcy4gU3Vic2VxdWVudCBgZ2V0KHgpYCBjYWxscyBmb3IgYSBrZXkgKngqIHdpbGwgcmV0dXJuIGB1bmRlZmluZWRgLCB1bnRpbCBhIG5ldyB2YWx1ZSBpcyBzZXRcbiAgICAgKiBmb3Iga2V5ICp4Ki5cbiAgICAgKi9cbiAgICBjbGVhcigpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBzdG9yYWdlIHNlcnZpY2UgdGhhdCB1c2VzIHRoZSBzcGVjaWZpZWQgdHJhbnNjb2RlciBieSBkZWZhdWx0IGZvciByZWFkIGFuZCB3cml0ZSBvcGVyYXRpb25zLiBUaGUgbmV3IHN0b3JhZ2Ugc2VydmljZVxuICAgICAqIHVzZXMgdGhlIHN0b3JhZ2Ugc2VydmljZSBvbiB3aGljaCB0aGlzIGZ1bmN0aW9uIGlzIGludm9rZWQgYXMgdW5kZXJseWluZyBzdG9yYWdlLiBCb3RoIHN0b3JhZ2Ugc2VydmljZXMgd2lsbCB0aHVzIGJlIGFibGUgdG8gYWNjZXNzXG4gICAgICogdGhlIHNhbWUgZGF0YS5cbiAgICAgKlxuICAgICAqIFRoZSBkZWZhdWx0IHRyYW5zY29kZXIgd2lsbCBub3QgYmUgY2hhbmdlZCBmb3IgdGhlIHN0b3JhZ2Ugc2VydmljZSBvbiB3aGljaCB0aGlzIGZ1bmN0aW9uIGlzIGludm9rZWQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gICB0cmFuc2NvZGVyIFRyYW5zY29kZXIgdGhhdCBzaG91bGQgYmUgdXNlZCBieSBkZWZhdWx0IGZvciByZWFkIGFuZCB3cml0ZSBvcGVyYXRpb25zIGJ5IHRoZSBuZXcgc3RvcmFnZSBzZXJ2aWNlLlxuICAgICAqIEByZXR1cm5zICAgICAgICAgICAgQSBuZXcgc3RvcmFnZSBzZXJ2aWNlIHRoYXQgdXNlcyB0aGUgc3BlY2lmaWVkIHRyYW5zY29kZXIgYnkgZGVmYXVsdC5cbiAgICAgKi9cbiAgICB3aXRoRGVmYXVsdFRyYW5zY29kZXI8WD4odHJhbnNjb2RlcjogU3RvcmFnZVRyYW5zY29kZXI8WD4pOiBTdG9yYWdlU2VydmljZTxYPjtcblxufVxuIl19